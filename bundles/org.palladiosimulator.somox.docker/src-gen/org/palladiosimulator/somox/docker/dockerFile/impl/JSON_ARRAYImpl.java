/**
 * generated by Xtext 2.21.0
 */
package org.palladiosimulator.somox.docker.dockerFile.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EDataTypeEList;

import org.palladiosimulator.somox.docker.dockerFile.AddDestination;
import org.palladiosimulator.somox.docker.dockerFile.DockerFilePackage;
import org.palladiosimulator.somox.docker.dockerFile.JSON_ARRAY;
import org.palladiosimulator.somox.docker.dockerFile.Volume;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>JSON ARRAY</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.palladiosimulator.somox.docker.dockerFile.impl.JSON_ARRAYImpl#getSource_left <em>Source left</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.dockerFile.impl.JSON_ARRAYImpl#getDest <em>Dest</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.dockerFile.impl.JSON_ARRAYImpl#getHead <em>Head</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.dockerFile.impl.JSON_ARRAYImpl#getTail <em>Tail</em>}</li>
 * </ul>
 *
 * @generated
 */
public class JSON_ARRAYImpl extends CmdImpl implements JSON_ARRAY
{
  /**
   * The default value of the '{@link #getSource_left() <em>Source left</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSource_left()
   * @generated
   * @ordered
   */
  protected static final String SOURCE_LEFT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSource_left() <em>Source left</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSource_left()
   * @generated
   * @ordered
   */
  protected String source_left = SOURCE_LEFT_EDEFAULT;

  /**
   * The default value of the '{@link #getDest() <em>Dest</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDest()
   * @generated
   * @ordered
   */
  protected static final String DEST_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDest() <em>Dest</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDest()
   * @generated
   * @ordered
   */
  protected String dest = DEST_EDEFAULT;

  /**
   * The default value of the '{@link #getHead() <em>Head</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHead()
   * @generated
   * @ordered
   */
  protected static final String HEAD_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getHead() <em>Head</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHead()
   * @generated
   * @ordered
   */
  protected String head = HEAD_EDEFAULT;

  /**
   * The cached value of the '{@link #getTail() <em>Tail</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTail()
   * @generated
   * @ordered
   */
  protected EList<String> tail;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected JSON_ARRAYImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DockerFilePackage.Literals.JSON_ARRAY;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getSource_left()
  {
    return source_left;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSource_left(String newSource_left)
  {
    String oldSource_left = source_left;
    source_left = newSource_left;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DockerFilePackage.JSON_ARRAY__SOURCE_LEFT, oldSource_left, source_left));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getDest()
  {
    return dest;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDest(String newDest)
  {
    String oldDest = dest;
    dest = newDest;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DockerFilePackage.JSON_ARRAY__DEST, oldDest, dest));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getHead()
  {
    return head;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setHead(String newHead)
  {
    String oldHead = head;
    head = newHead;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DockerFilePackage.JSON_ARRAY__HEAD, oldHead, head));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<String> getTail()
  {
    if (tail == null)
    {
      tail = new EDataTypeEList<String>(String.class, this, DockerFilePackage.JSON_ARRAY__TAIL);
    }
    return tail;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DockerFilePackage.JSON_ARRAY__SOURCE_LEFT:
        return getSource_left();
      case DockerFilePackage.JSON_ARRAY__DEST:
        return getDest();
      case DockerFilePackage.JSON_ARRAY__HEAD:
        return getHead();
      case DockerFilePackage.JSON_ARRAY__TAIL:
        return getTail();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DockerFilePackage.JSON_ARRAY__SOURCE_LEFT:
        setSource_left((String)newValue);
        return;
      case DockerFilePackage.JSON_ARRAY__DEST:
        setDest((String)newValue);
        return;
      case DockerFilePackage.JSON_ARRAY__HEAD:
        setHead((String)newValue);
        return;
      case DockerFilePackage.JSON_ARRAY__TAIL:
        getTail().clear();
        getTail().addAll((Collection<? extends String>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DockerFilePackage.JSON_ARRAY__SOURCE_LEFT:
        setSource_left(SOURCE_LEFT_EDEFAULT);
        return;
      case DockerFilePackage.JSON_ARRAY__DEST:
        setDest(DEST_EDEFAULT);
        return;
      case DockerFilePackage.JSON_ARRAY__HEAD:
        setHead(HEAD_EDEFAULT);
        return;
      case DockerFilePackage.JSON_ARRAY__TAIL:
        getTail().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DockerFilePackage.JSON_ARRAY__SOURCE_LEFT:
        return SOURCE_LEFT_EDEFAULT == null ? source_left != null : !SOURCE_LEFT_EDEFAULT.equals(source_left);
      case DockerFilePackage.JSON_ARRAY__DEST:
        return DEST_EDEFAULT == null ? dest != null : !DEST_EDEFAULT.equals(dest);
      case DockerFilePackage.JSON_ARRAY__HEAD:
        return HEAD_EDEFAULT == null ? head != null : !HEAD_EDEFAULT.equals(head);
      case DockerFilePackage.JSON_ARRAY__TAIL:
        return tail != null && !tail.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int eBaseStructuralFeatureID(int derivedFeatureID, Class<?> baseClass)
  {
    if (baseClass == AddDestination.class)
    {
      switch (derivedFeatureID)
      {
        case DockerFilePackage.JSON_ARRAY__SOURCE_LEFT: return DockerFilePackage.ADD_DESTINATION__SOURCE_LEFT;
        case DockerFilePackage.JSON_ARRAY__DEST: return DockerFilePackage.ADD_DESTINATION__DEST;
        default: return -1;
      }
    }
    if (baseClass == Volume.class)
    {
      switch (derivedFeatureID)
      {
        default: return -1;
      }
    }
    return super.eBaseStructuralFeatureID(derivedFeatureID, baseClass);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int eDerivedStructuralFeatureID(int baseFeatureID, Class<?> baseClass)
  {
    if (baseClass == AddDestination.class)
    {
      switch (baseFeatureID)
      {
        case DockerFilePackage.ADD_DESTINATION__SOURCE_LEFT: return DockerFilePackage.JSON_ARRAY__SOURCE_LEFT;
        case DockerFilePackage.ADD_DESTINATION__DEST: return DockerFilePackage.JSON_ARRAY__DEST;
        default: return -1;
      }
    }
    if (baseClass == Volume.class)
    {
      switch (baseFeatureID)
      {
        default: return -1;
      }
    }
    return super.eDerivedStructuralFeatureID(baseFeatureID, baseClass);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (source_left: ");
    result.append(source_left);
    result.append(", dest: ");
    result.append(dest);
    result.append(", head: ");
    result.append(head);
    result.append(", tail: ");
    result.append(tail);
    result.append(')');
    return result.toString();
  }

} //JSON_ARRAYImpl
