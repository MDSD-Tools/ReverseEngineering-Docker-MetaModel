/*
 * generated by Xtext 2.21.0
 */
grammar InternalDockerFile;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.palladiosimulator.somox.docker.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.palladiosimulator.somox.docker.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.palladiosimulator.somox.docker.services.DockerFileGrammarAccess;

}
@parser::members {
	private DockerFileGrammarAccess grammarAccess;

	public void setGrammarAccess(DockerFileGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleDockerfile
entryRuleDockerfile
:
{ before(grammarAccess.getDockerfileRule()); }
	 ruleDockerfile
{ after(grammarAccess.getDockerfileRule()); } 
	 EOF 
;

// Rule Dockerfile
ruleDockerfile 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getDockerfileAccess().getInstructionsAssignment()); }
			(rule__Dockerfile__InstructionsAssignment)
			{ after(grammarAccess.getDockerfileAccess().getInstructionsAssignment()); }
		)
		(
			{ before(grammarAccess.getDockerfileAccess().getInstructionsAssignment()); }
			(rule__Dockerfile__InstructionsAssignment)*
			{ after(grammarAccess.getDockerfileAccess().getInstructionsAssignment()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInstruction
entryRuleInstruction
:
{ before(grammarAccess.getInstructionRule()); }
	 ruleInstruction
{ after(grammarAccess.getInstructionRule()); } 
	 EOF 
;

// Rule Instruction
ruleInstruction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInstructionAccess().getAlternatives()); }
		(rule__Instruction__Alternatives)
		{ after(grammarAccess.getInstructionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCmd
entryRuleCmd
:
{ before(grammarAccess.getCmdRule()); }
	 ruleCmd
{ after(grammarAccess.getCmdRule()); } 
	 EOF 
;

// Rule Cmd
ruleCmd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCmdAccess().getGroup()); }
		(rule__Cmd__Group__0)
		{ after(grammarAccess.getCmdAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCopy
entryRuleCopy
:
{ before(grammarAccess.getCopyRule()); }
	 ruleCopy
{ after(grammarAccess.getCopyRule()); } 
	 EOF 
;

// Rule Copy
ruleCopy 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCopyAccess().getGroup()); }
		(rule__Copy__Group__0)
		{ after(grammarAccess.getCopyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEntrypoint
entryRuleEntrypoint
:
{ before(grammarAccess.getEntrypointRule()); }
	 ruleEntrypoint
{ after(grammarAccess.getEntrypointRule()); } 
	 EOF 
;

// Rule Entrypoint
ruleEntrypoint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntrypointAccess().getGroup()); }
		(rule__Entrypoint__Group__0)
		{ after(grammarAccess.getEntrypointAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVolume
entryRuleVolume
:
{ before(grammarAccess.getVolumeRule()); }
	 ruleVolume
{ after(grammarAccess.getVolumeRule()); } 
	 EOF 
;

// Rule Volume
ruleVolume 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVolumeAccess().getGroup()); }
		(rule__Volume__Group__0)
		{ after(grammarAccess.getVolumeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUser
entryRuleUser
:
{ before(grammarAccess.getUserRule()); }
	 ruleUser
{ after(grammarAccess.getUserRule()); } 
	 EOF 
;

// Rule User
ruleUser 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUserAccess().getGroup()); }
		(rule__User__Group__0)
		{ after(grammarAccess.getUserAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOnbuild
entryRuleOnbuild
:
{ before(grammarAccess.getOnbuildRule()); }
	 ruleOnbuild
{ after(grammarAccess.getOnbuildRule()); } 
	 EOF 
;

// Rule Onbuild
ruleOnbuild 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOnbuildAccess().getGroup()); }
		(rule__Onbuild__Group__0)
		{ after(grammarAccess.getOnbuildAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFrom
entryRuleFrom
:
{ before(grammarAccess.getFromRule()); }
	 ruleFrom
{ after(grammarAccess.getFromRule()); } 
	 EOF 
;

// Rule From
ruleFrom 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFromAccess().getGroup()); }
		(rule__From__Group__0)
		{ after(grammarAccess.getFromAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMaintainer
entryRuleMaintainer
:
{ before(grammarAccess.getMaintainerRule()); }
	 ruleMaintainer
{ after(grammarAccess.getMaintainerRule()); } 
	 EOF 
;

// Rule Maintainer
ruleMaintainer 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMaintainerAccess().getGroup()); }
		(rule__Maintainer__Group__0)
		{ after(grammarAccess.getMaintainerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnv
entryRuleEnv
:
{ before(grammarAccess.getEnvRule()); }
	 ruleEnv
{ after(grammarAccess.getEnvRule()); } 
	 EOF 
;

// Rule Env
ruleEnv 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnvAccess().getGroup()); }
		(rule__Env__Group__0)
		{ after(grammarAccess.getEnvAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpose
entryRuleExpose
:
{ before(grammarAccess.getExposeRule()); }
	 ruleExpose
{ after(grammarAccess.getExposeRule()); } 
	 EOF 
;

// Rule Expose
ruleExpose 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExposeAccess().getGroup()); }
		(rule__Expose__Group__0)
		{ after(grammarAccess.getExposeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJSON_ARRAY
entryRuleJSON_ARRAY
:
{ before(grammarAccess.getJSON_ARRAYRule()); }
	 ruleJSON_ARRAY
{ after(grammarAccess.getJSON_ARRAYRule()); } 
	 EOF 
;

// Rule JSON_ARRAY
ruleJSON_ARRAY 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJSON_ARRAYAccess().getGroup()); }
		(rule__JSON_ARRAY__Group__0)
		{ after(grammarAccess.getJSON_ARRAYAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnvWithSpace
entryRuleEnvWithSpace
:
{ before(grammarAccess.getEnvWithSpaceRule()); }
	 ruleEnvWithSpace
{ after(grammarAccess.getEnvWithSpaceRule()); } 
	 EOF 
;

// Rule EnvWithSpace
ruleEnvWithSpace 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnvWithSpaceAccess().getGroup()); }
		(rule__EnvWithSpace__Group__0)
		{ after(grammarAccess.getEnvWithSpaceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnvWithEqual
entryRuleEnvWithEqual
:
{ before(grammarAccess.getEnvWithEqualRule()); }
	 ruleEnvWithEqual
{ after(grammarAccess.getEnvWithEqualRule()); } 
	 EOF 
;

// Rule EnvWithEqual
ruleEnvWithEqual 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getEnvWithEqualAccess().getGroup()); }
			(rule__EnvWithEqual__Group__0)
			{ after(grammarAccess.getEnvWithEqualAccess().getGroup()); }
		)
		(
			{ before(grammarAccess.getEnvWithEqualAccess().getGroup()); }
			(rule__EnvWithEqual__Group__0)*
			{ after(grammarAccess.getEnvWithEqualAccess().getGroup()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWorkdir
entryRuleWorkdir
:
{ before(grammarAccess.getWorkdirRule()); }
	 ruleWorkdir
{ after(grammarAccess.getWorkdirRule()); } 
	 EOF 
;

// Rule Workdir
ruleWorkdir 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWorkdirAccess().getGroup()); }
		(rule__Workdir__Group__0)
		{ after(grammarAccess.getWorkdirAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAdd
entryRuleAdd
:
{ before(grammarAccess.getAddRule()); }
	 ruleAdd
{ after(grammarAccess.getAddRule()); } 
	 EOF 
;

// Rule Add
ruleAdd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAddAccess().getGroup()); }
		(rule__Add__Group__0)
		{ after(grammarAccess.getAddAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAddSource
entryRuleAddSource
:
{ before(grammarAccess.getAddSourceRule()); }
	 ruleAddSource
{ after(grammarAccess.getAddSourceRule()); } 
	 EOF 
;

// Rule AddSource
ruleAddSource 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAddSourceAccess().getAlternatives()); }
		(rule__AddSource__Alternatives)
		{ after(grammarAccess.getAddSourceAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRun
entryRuleRun
:
{ before(grammarAccess.getRunRule()); }
	 ruleRun
{ after(grammarAccess.getRunRule()); } 
	 EOF 
;

// Rule Run
ruleRun 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRunAccess().getAlternatives()); }
		(rule__Run__Alternatives)
		{ after(grammarAccess.getRunAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRunWithShell
entryRuleRunWithShell
:
{ before(grammarAccess.getRunWithShellRule()); }
	 ruleRunWithShell
{ after(grammarAccess.getRunWithShellRule()); } 
	 EOF 
;

// Rule RunWithShell
ruleRunWithShell 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRunWithShellAccess().getCommandAssignment()); }
		(rule__RunWithShell__CommandAssignment)
		{ after(grammarAccess.getRunWithShellAccess().getCommandAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRunWithNoShell
entryRuleRunWithNoShell
:
{ before(grammarAccess.getRunWithNoShellRule()); }
	 ruleRunWithNoShell
{ after(grammarAccess.getRunWithNoShellRule()); } 
	 EOF 
;

// Rule RunWithNoShell
ruleRunWithNoShell 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRunWithNoShellAccess().getGroup()); }
		(rule__RunWithNoShell__Group__0)
		{ after(grammarAccess.getRunWithNoShellAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSTRING_PREFIXED_WITH_COMMA
entryRuleSTRING_PREFIXED_WITH_COMMA
:
{ before(grammarAccess.getSTRING_PREFIXED_WITH_COMMARule()); }
	 ruleSTRING_PREFIXED_WITH_COMMA
{ after(grammarAccess.getSTRING_PREFIXED_WITH_COMMARule()); } 
	 EOF 
;

// Rule STRING_PREFIXED_WITH_COMMA
ruleSTRING_PREFIXED_WITH_COMMA 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSTRING_PREFIXED_WITH_COMMAAccess().getGroup()); }
		(rule__STRING_PREFIXED_WITH_COMMA__Group__0)
		{ after(grammarAccess.getSTRING_PREFIXED_WITH_COMMAAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVALID_RELATIVE_PATH
entryRuleVALID_RELATIVE_PATH
:
{ before(grammarAccess.getVALID_RELATIVE_PATHRule()); }
	 ruleVALID_RELATIVE_PATH
{ after(grammarAccess.getVALID_RELATIVE_PATHRule()); } 
	 EOF 
;

// Rule VALID_RELATIVE_PATH
ruleVALID_RELATIVE_PATH 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVALID_RELATIVE_PATHAccess().getGroup()); }
		(rule__VALID_RELATIVE_PATH__Group__0)
		{ after(grammarAccess.getVALID_RELATIVE_PATHAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVALID_URL
entryRuleVALID_URL
:
{ before(grammarAccess.getVALID_URLRule()); }
	 ruleVALID_URL
{ after(grammarAccess.getVALID_URLRule()); } 
	 EOF 
;

// Rule VALID_URL
ruleVALID_URL 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVALID_URLAccess().getGroup()); }
		(rule__VALID_URL__Group__0)
		{ after(grammarAccess.getVALID_URLAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVALID_IMAGE_NAME
entryRuleVALID_IMAGE_NAME
:
{ before(grammarAccess.getVALID_IMAGE_NAMERule()); }
	 ruleVALID_IMAGE_NAME
{ after(grammarAccess.getVALID_IMAGE_NAMERule()); } 
	 EOF 
;

// Rule VALID_IMAGE_NAME
ruleVALID_IMAGE_NAME 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVALID_IMAGE_NAMEAccess().getGroup()); }
		(rule__VALID_IMAGE_NAME__Group__0)
		{ after(grammarAccess.getVALID_IMAGE_NAMEAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVALID_IMAGE_TAG
entryRuleVALID_IMAGE_TAG
:
{ before(grammarAccess.getVALID_IMAGE_TAGRule()); }
	 ruleVALID_IMAGE_TAG
{ after(grammarAccess.getVALID_IMAGE_TAGRule()); } 
	 EOF 
;

// Rule VALID_IMAGE_TAG
ruleVALID_IMAGE_TAG 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVALID_IMAGE_TAGAccess().getGroup()); }
		(rule__VALID_IMAGE_TAG__Group__0)
		{ after(grammarAccess.getVALID_IMAGE_TAGAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionAccess().getAddParserRuleCall_0()); }
		ruleAdd
		{ after(grammarAccess.getInstructionAccess().getAddParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getCmdParserRuleCall_1()); }
		ruleCmd
		{ after(grammarAccess.getInstructionAccess().getCmdParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getCopyParserRuleCall_2()); }
		ruleCopy
		{ after(grammarAccess.getInstructionAccess().getCopyParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getEntrypointParserRuleCall_3()); }
		ruleEntrypoint
		{ after(grammarAccess.getInstructionAccess().getEntrypointParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getExposeParserRuleCall_4()); }
		ruleExpose
		{ after(grammarAccess.getInstructionAccess().getExposeParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getEnvParserRuleCall_5()); }
		ruleEnv
		{ after(grammarAccess.getInstructionAccess().getEnvParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getFromParserRuleCall_6()); }
		ruleFrom
		{ after(grammarAccess.getInstructionAccess().getFromParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getMaintainerParserRuleCall_7()); }
		ruleMaintainer
		{ after(grammarAccess.getInstructionAccess().getMaintainerParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getOnbuildParserRuleCall_8()); }
		ruleOnbuild
		{ after(grammarAccess.getInstructionAccess().getOnbuildParserRuleCall_8()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getRunParserRuleCall_9()); }
		ruleRun
		{ after(grammarAccess.getInstructionAccess().getRunParserRuleCall_9()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getUserParserRuleCall_10()); }
		ruleUser
		{ after(grammarAccess.getInstructionAccess().getUserParserRuleCall_10()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getVolumeParserRuleCall_11()); }
		ruleVolume
		{ after(grammarAccess.getInstructionAccess().getVolumeParserRuleCall_11()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getWorkdirParserRuleCall_12()); }
		ruleWorkdir
		{ after(grammarAccess.getInstructionAccess().getWorkdirParserRuleCall_12()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cmd__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCmdAccess().getJSON_ARRAYParserRuleCall_1_0()); }
		ruleJSON_ARRAY
		{ after(grammarAccess.getCmdAccess().getJSON_ARRAYParserRuleCall_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getCmdAccess().getGroup_1_1()); }
		(rule__Cmd__Group_1_1__0)
		{ after(grammarAccess.getCmdAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Copy__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCopyAccess().getJSON_ARRAYParserRuleCall_1_0()); }
		ruleJSON_ARRAY
		{ after(grammarAccess.getCopyAccess().getJSON_ARRAYParserRuleCall_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getCopyAccess().getGroup_1_1()); }
		(rule__Copy__Group_1_1__0)
		{ after(grammarAccess.getCopyAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entrypoint__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntrypointAccess().getJSON_ARRAYParserRuleCall_1_0()); }
		ruleJSON_ARRAY
		{ after(grammarAccess.getEntrypointAccess().getJSON_ARRAYParserRuleCall_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getEntrypointAccess().getGroup_1_1()); }
		(rule__Entrypoint__Group_1_1__0)
		{ after(grammarAccess.getEntrypointAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Volume__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVolumeAccess().getJSON_ARRAYParserRuleCall_1_0()); }
		ruleJSON_ARRAY
		{ after(grammarAccess.getVolumeAccess().getJSON_ARRAYParserRuleCall_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getVolumeAccess().getGroup_1_1()); }
		(rule__Volume__Group_1_1__0)
		{ after(grammarAccess.getVolumeAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Env__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnvAccess().getEnvWithSpaceParserRuleCall_1_0()); }
		ruleEnvWithSpace
		{ after(grammarAccess.getEnvAccess().getEnvWithSpaceParserRuleCall_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getEnvAccess().getEnvWithEqualParserRuleCall_1_1()); }
		ruleEnvWithEqual
		{ after(grammarAccess.getEnvAccess().getEnvWithEqualParserRuleCall_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddSource__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddSourceAccess().getVALID_RELATIVE_PATHParserRuleCall_0()); }
		ruleVALID_RELATIVE_PATH
		{ after(grammarAccess.getAddSourceAccess().getVALID_RELATIVE_PATHParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAddSourceAccess().getVALID_URLParserRuleCall_1()); }
		ruleVALID_URL
		{ after(grammarAccess.getAddSourceAccess().getVALID_URLParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getAddSourceAccess().getFullStopKeyword_2()); }
		'.'
		{ after(grammarAccess.getAddSourceAccess().getFullStopKeyword_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Run__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRunAccess().getGroup_0()); }
		(rule__Run__Group_0__0)
		{ after(grammarAccess.getRunAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getRunAccess().getRunWithNoShellParserRuleCall_1()); }
		ruleRunWithNoShell
		{ after(grammarAccess.getRunAccess().getRunWithNoShellParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VALID_URL__Alternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVALID_URLAccess().getSolidusKeyword_2_0_0()); }
		'/'
		{ after(grammarAccess.getVALID_URLAccess().getSolidusKeyword_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getVALID_URLAccess().getFullStopKeyword_2_0_1()); }
		'.'
		{ after(grammarAccess.getVALID_URLAccess().getFullStopKeyword_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VALID_IMAGE_TAG__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVALID_IMAGE_TAGAccess().getIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getVALID_IMAGE_TAGAccess().getIDTerminalRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getVALID_IMAGE_TAGAccess().getINTTerminalRuleCall_0_1()); }
		RULE_INT
		{ after(grammarAccess.getVALID_IMAGE_TAGAccess().getINTTerminalRuleCall_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getVALID_IMAGE_TAGAccess().getSTRINGTerminalRuleCall_0_2()); }
		RULE_STRING
		{ after(grammarAccess.getVALID_IMAGE_TAGAccess().getSTRINGTerminalRuleCall_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VALID_IMAGE_TAG__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVALID_IMAGE_TAGAccess().getIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getVALID_IMAGE_TAGAccess().getIDTerminalRuleCall_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getVALID_IMAGE_TAGAccess().getINTTerminalRuleCall_1_1()); }
		RULE_INT
		{ after(grammarAccess.getVALID_IMAGE_TAGAccess().getINTTerminalRuleCall_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getVALID_IMAGE_TAGAccess().getSTRINGTerminalRuleCall_1_2()); }
		RULE_STRING
		{ after(grammarAccess.getVALID_IMAGE_TAGAccess().getSTRINGTerminalRuleCall_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getVALID_IMAGE_TAGAccess().getHyphenMinusKeyword_1_3()); }
		'-'
		{ after(grammarAccess.getVALID_IMAGE_TAGAccess().getHyphenMinusKeyword_1_3()); }
	)
	|
	(
		{ before(grammarAccess.getVALID_IMAGE_TAGAccess().getFullStopKeyword_1_4()); }
		'.'
		{ after(grammarAccess.getVALID_IMAGE_TAGAccess().getFullStopKeyword_1_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cmd__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cmd__Group__0__Impl
	rule__Cmd__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cmd__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCmdAccess().getCMDKeyword_0()); }
	'CMD'
	{ after(grammarAccess.getCmdAccess().getCMDKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cmd__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cmd__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cmd__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCmdAccess().getAlternatives_1()); }
	(rule__Cmd__Alternatives_1)
	{ after(grammarAccess.getCmdAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Cmd__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cmd__Group_1_1__0__Impl
	rule__Cmd__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cmd__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCmdAccess().getCmdAction_1_1_0()); }
	()
	{ after(grammarAccess.getCmdAccess().getCmdAction_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cmd__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cmd__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cmd__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCmdAccess().getONE_SPACE_AND_WHATEVERTerminalRuleCall_1_1_1()); }
	RULE_ONE_SPACE_AND_WHATEVER
	{ after(grammarAccess.getCmdAccess().getONE_SPACE_AND_WHATEVERTerminalRuleCall_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Copy__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Copy__Group__0__Impl
	rule__Copy__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Copy__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCopyAccess().getCOPYKeyword_0()); }
	'COPY'
	{ after(grammarAccess.getCopyAccess().getCOPYKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Copy__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Copy__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Copy__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCopyAccess().getAlternatives_1()); }
	(rule__Copy__Alternatives_1)
	{ after(grammarAccess.getCopyAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Copy__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Copy__Group_1_1__0__Impl
	rule__Copy__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Copy__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCopyAccess().getSource_leftAssignment_1_1_0()); }
	(rule__Copy__Source_leftAssignment_1_1_0)
	{ after(grammarAccess.getCopyAccess().getSource_leftAssignment_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Copy__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Copy__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Copy__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCopyAccess().getDestAssignment_1_1_1()); }
	(rule__Copy__DestAssignment_1_1_1)
	{ after(grammarAccess.getCopyAccess().getDestAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Entrypoint__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entrypoint__Group__0__Impl
	rule__Entrypoint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entrypoint__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntrypointAccess().getENTRYPOINTKeyword_0()); }
	'ENTRYPOINT'
	{ after(grammarAccess.getEntrypointAccess().getENTRYPOINTKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entrypoint__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entrypoint__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entrypoint__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntrypointAccess().getAlternatives_1()); }
	(rule__Entrypoint__Alternatives_1)
	{ after(grammarAccess.getEntrypointAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Entrypoint__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entrypoint__Group_1_1__0__Impl
	rule__Entrypoint__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entrypoint__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntrypointAccess().getCmdAction_1_1_0()); }
	()
	{ after(grammarAccess.getEntrypointAccess().getCmdAction_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entrypoint__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entrypoint__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entrypoint__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntrypointAccess().getONE_SPACE_AND_WHATEVERTerminalRuleCall_1_1_1()); }
	RULE_ONE_SPACE_AND_WHATEVER
	{ after(grammarAccess.getEntrypointAccess().getONE_SPACE_AND_WHATEVERTerminalRuleCall_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Volume__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Volume__Group__0__Impl
	rule__Volume__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Volume__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVolumeAccess().getVOLUMEKeyword_0()); }
	'VOLUME'
	{ after(grammarAccess.getVolumeAccess().getVOLUMEKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Volume__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Volume__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Volume__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVolumeAccess().getAlternatives_1()); }
	(rule__Volume__Alternatives_1)
	{ after(grammarAccess.getVolumeAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Volume__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Volume__Group_1_1__0__Impl
	rule__Volume__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Volume__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVolumeAccess().getVolumeAction_1_1_0()); }
	()
	{ after(grammarAccess.getVolumeAccess().getVolumeAction_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Volume__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Volume__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Volume__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVolumeAccess().getONE_SPACE_AND_WHATEVERTerminalRuleCall_1_1_1()); }
	RULE_ONE_SPACE_AND_WHATEVER
	{ after(grammarAccess.getVolumeAccess().getONE_SPACE_AND_WHATEVERTerminalRuleCall_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__User__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__User__Group__0__Impl
	rule__User__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__User__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUserAccess().getUSERKeyword_0()); }
	'USER'
	{ after(grammarAccess.getUserAccess().getUSERKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__User__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__User__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__User__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUserAccess().getNameAssignment_1()); }
	(rule__User__NameAssignment_1)
	{ after(grammarAccess.getUserAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Onbuild__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Onbuild__Group__0__Impl
	rule__Onbuild__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Onbuild__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOnbuildAccess().getONBUILDKeyword_0()); }
	'ONBUILD'
	{ after(grammarAccess.getOnbuildAccess().getONBUILDKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Onbuild__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Onbuild__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Onbuild__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOnbuildAccess().getInstructionAssignment_1()); }
	(rule__Onbuild__InstructionAssignment_1)
	{ after(grammarAccess.getOnbuildAccess().getInstructionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__From__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__From__Group__0__Impl
	rule__From__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__From__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFromAccess().getFROMKeyword_0()); }
	'FROM'
	{ after(grammarAccess.getFromAccess().getFROMKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__From__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__From__Group__1__Impl
	rule__From__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__From__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFromAccess().getNameAssignment_1()); }
	(rule__From__NameAssignment_1)
	{ after(grammarAccess.getFromAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__From__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__From__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__From__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFromAccess().getGroup_2()); }
	(rule__From__Group_2__0)?
	{ after(grammarAccess.getFromAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__From__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__From__Group_2__0__Impl
	rule__From__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__From__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFromAccess().getColonKeyword_2_0()); }
	':'
	{ after(grammarAccess.getFromAccess().getColonKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__From__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__From__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__From__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFromAccess().getTagAssignment_2_1()); }
	(rule__From__TagAssignment_2_1)
	{ after(grammarAccess.getFromAccess().getTagAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Maintainer__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Maintainer__Group__0__Impl
	rule__Maintainer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Maintainer__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaintainerAccess().getMAINTAINERKeyword_0()); }
	'MAINTAINER'
	{ after(grammarAccess.getMaintainerAccess().getMAINTAINERKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Maintainer__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Maintainer__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Maintainer__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaintainerAccess().getNameAssignment_1()); }
	(rule__Maintainer__NameAssignment_1)
	{ after(grammarAccess.getMaintainerAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Env__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Env__Group__0__Impl
	rule__Env__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Env__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvAccess().getENVKeyword_0()); }
	'ENV'
	{ after(grammarAccess.getEnvAccess().getENVKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Env__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Env__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Env__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvAccess().getAlternatives_1()); }
	(rule__Env__Alternatives_1)
	{ after(grammarAccess.getEnvAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expose__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expose__Group__0__Impl
	rule__Expose__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expose__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExposeAccess().getEXPOSEKeyword_0()); }
	'EXPOSE'
	{ after(grammarAccess.getExposeAccess().getEXPOSEKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expose__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expose__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expose__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExposeAccess().getPortsAssignment_1()); }
	(rule__Expose__PortsAssignment_1)
	{ after(grammarAccess.getExposeAccess().getPortsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JSON_ARRAY__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSON_ARRAY__Group__0__Impl
	rule__JSON_ARRAY__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JSON_ARRAY__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJSON_ARRAYAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getJSON_ARRAYAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSON_ARRAY__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSON_ARRAY__Group__1__Impl
	rule__JSON_ARRAY__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JSON_ARRAY__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJSON_ARRAYAccess().getHeadAssignment_1()); }
	(rule__JSON_ARRAY__HeadAssignment_1)
	{ after(grammarAccess.getJSON_ARRAYAccess().getHeadAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSON_ARRAY__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSON_ARRAY__Group__2__Impl
	rule__JSON_ARRAY__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__JSON_ARRAY__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJSON_ARRAYAccess().getTailAssignment_2()); }
	(rule__JSON_ARRAY__TailAssignment_2)*
	{ after(grammarAccess.getJSON_ARRAYAccess().getTailAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSON_ARRAY__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSON_ARRAY__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JSON_ARRAY__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJSON_ARRAYAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getJSON_ARRAYAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnvWithSpace__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnvWithSpace__Group__0__Impl
	rule__EnvWithSpace__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvWithSpace__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvWithSpaceAccess().getKeyAssignment_0()); }
	(rule__EnvWithSpace__KeyAssignment_0)
	{ after(grammarAccess.getEnvWithSpaceAccess().getKeyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvWithSpace__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnvWithSpace__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvWithSpace__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvWithSpaceAccess().getValueAssignment_1()); }
	(rule__EnvWithSpace__ValueAssignment_1)
	{ after(grammarAccess.getEnvWithSpaceAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnvWithEqual__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnvWithEqual__Group__0__Impl
	rule__EnvWithEqual__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvWithEqual__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvWithEqualAccess().getKeyAssignment_0()); }
	(rule__EnvWithEqual__KeyAssignment_0)
	{ after(grammarAccess.getEnvWithEqualAccess().getKeyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvWithEqual__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnvWithEqual__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvWithEqual__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvWithEqualAccess().getValueAssignment_1()); }
	(rule__EnvWithEqual__ValueAssignment_1)
	{ after(grammarAccess.getEnvWithEqualAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Workdir__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Workdir__Group__0__Impl
	rule__Workdir__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Workdir__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkdirAccess().getWORKDIRKeyword_0()); }
	'WORKDIR'
	{ after(grammarAccess.getWorkdirAccess().getWORKDIRKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Workdir__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Workdir__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Workdir__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkdirAccess().getPathAssignment_1()); }
	(rule__Workdir__PathAssignment_1)
	{ after(grammarAccess.getWorkdirAccess().getPathAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Add__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group__0__Impl
	rule__Add__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getADDKeyword_0()); }
	'ADD'
	{ after(grammarAccess.getAddAccess().getADDKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group__1__Impl
	rule__Add__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getSource_leftAssignment_1()); }
	(rule__Add__Source_leftAssignment_1)
	{ after(grammarAccess.getAddAccess().getSource_leftAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getDestAssignment_2()); }
	(rule__Add__DestAssignment_2)
	{ after(grammarAccess.getAddAccess().getDestAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Run__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Run__Group_0__0__Impl
	rule__Run__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Run__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRunAccess().getRUNKeyword_0_0()); }
	'RUN'
	{ after(grammarAccess.getRunAccess().getRUNKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Run__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Run__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Run__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRunAccess().getRunWithShellParserRuleCall_0_1()); }
	ruleRunWithShell
	{ after(grammarAccess.getRunAccess().getRunWithShellParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RunWithNoShell__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RunWithNoShell__Group__0__Impl
	rule__RunWithNoShell__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RunWithNoShell__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRunWithNoShellAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getRunWithNoShellAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RunWithNoShell__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RunWithNoShell__Group__1__Impl
	rule__RunWithNoShell__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RunWithNoShell__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRunWithNoShellAccess().getExecutableAssignment_1()); }
	(rule__RunWithNoShell__ExecutableAssignment_1)
	{ after(grammarAccess.getRunWithNoShellAccess().getExecutableAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RunWithNoShell__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RunWithNoShell__Group__2__Impl
	rule__RunWithNoShell__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RunWithNoShell__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRunWithNoShellAccess().getParamsAssignment_2()); }
	(rule__RunWithNoShell__ParamsAssignment_2)*
	{ after(grammarAccess.getRunWithNoShellAccess().getParamsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RunWithNoShell__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RunWithNoShell__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RunWithNoShell__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRunWithNoShellAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getRunWithNoShellAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__STRING_PREFIXED_WITH_COMMA__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__STRING_PREFIXED_WITH_COMMA__Group__0__Impl
	rule__STRING_PREFIXED_WITH_COMMA__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__STRING_PREFIXED_WITH_COMMA__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSTRING_PREFIXED_WITH_COMMAAccess().getCommaKeyword_0()); }
	','
	{ after(grammarAccess.getSTRING_PREFIXED_WITH_COMMAAccess().getCommaKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__STRING_PREFIXED_WITH_COMMA__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__STRING_PREFIXED_WITH_COMMA__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__STRING_PREFIXED_WITH_COMMA__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSTRING_PREFIXED_WITH_COMMAAccess().getSTRINGTerminalRuleCall_1()); }
	RULE_STRING
	{ after(grammarAccess.getSTRING_PREFIXED_WITH_COMMAAccess().getSTRINGTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VALID_RELATIVE_PATH__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VALID_RELATIVE_PATH__Group__0__Impl
	rule__VALID_RELATIVE_PATH__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VALID_RELATIVE_PATH__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVALID_RELATIVE_PATHAccess().getGroup_0()); }
	(rule__VALID_RELATIVE_PATH__Group_0__0)
	{ after(grammarAccess.getVALID_RELATIVE_PATHAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VALID_RELATIVE_PATH__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VALID_RELATIVE_PATH__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VALID_RELATIVE_PATH__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVALID_RELATIVE_PATHAccess().getAsteriskKeyword_1()); }
	('*')?
	{ after(grammarAccess.getVALID_RELATIVE_PATHAccess().getAsteriskKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VALID_RELATIVE_PATH__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VALID_RELATIVE_PATH__Group_0__0__Impl
	rule__VALID_RELATIVE_PATH__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VALID_RELATIVE_PATH__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVALID_RELATIVE_PATHAccess().getIDTerminalRuleCall_0_0()); }
	RULE_ID
	{ after(grammarAccess.getVALID_RELATIVE_PATHAccess().getIDTerminalRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VALID_RELATIVE_PATH__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VALID_RELATIVE_PATH__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VALID_RELATIVE_PATH__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVALID_RELATIVE_PATHAccess().getGroup_0_1()); }
	(rule__VALID_RELATIVE_PATH__Group_0_1__0)*
	{ after(grammarAccess.getVALID_RELATIVE_PATHAccess().getGroup_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VALID_RELATIVE_PATH__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VALID_RELATIVE_PATH__Group_0_1__0__Impl
	rule__VALID_RELATIVE_PATH__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VALID_RELATIVE_PATH__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVALID_RELATIVE_PATHAccess().getSolidusKeyword_0_1_0()); }
	'/'
	{ after(grammarAccess.getVALID_RELATIVE_PATHAccess().getSolidusKeyword_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VALID_RELATIVE_PATH__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VALID_RELATIVE_PATH__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VALID_RELATIVE_PATH__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVALID_RELATIVE_PATHAccess().getIDTerminalRuleCall_0_1_1()); }
	RULE_ID
	{ after(grammarAccess.getVALID_RELATIVE_PATHAccess().getIDTerminalRuleCall_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VALID_URL__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VALID_URL__Group__0__Impl
	rule__VALID_URL__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VALID_URL__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVALID_URLAccess().getHttpKeyword_0()); }
	'http://'
	{ after(grammarAccess.getVALID_URLAccess().getHttpKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VALID_URL__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VALID_URL__Group__1__Impl
	rule__VALID_URL__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VALID_URL__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVALID_URLAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
	{ after(grammarAccess.getVALID_URLAccess().getIDTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VALID_URL__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VALID_URL__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VALID_URL__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVALID_URLAccess().getGroup_2()); }
	(rule__VALID_URL__Group_2__0)*
	{ after(grammarAccess.getVALID_URLAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VALID_URL__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VALID_URL__Group_2__0__Impl
	rule__VALID_URL__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VALID_URL__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVALID_URLAccess().getAlternatives_2_0()); }
	(rule__VALID_URL__Alternatives_2_0)
	{ after(grammarAccess.getVALID_URLAccess().getAlternatives_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VALID_URL__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VALID_URL__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VALID_URL__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVALID_URLAccess().getIDTerminalRuleCall_2_1()); }
	RULE_ID
	{ after(grammarAccess.getVALID_URLAccess().getIDTerminalRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VALID_IMAGE_NAME__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VALID_IMAGE_NAME__Group__0__Impl
	rule__VALID_IMAGE_NAME__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VALID_IMAGE_NAME__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVALID_IMAGE_NAMEAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getVALID_IMAGE_NAMEAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VALID_IMAGE_NAME__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VALID_IMAGE_NAME__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VALID_IMAGE_NAME__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVALID_IMAGE_NAMEAccess().getGroup_1()); }
	(rule__VALID_IMAGE_NAME__Group_1__0)*
	{ after(grammarAccess.getVALID_IMAGE_NAMEAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VALID_IMAGE_NAME__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VALID_IMAGE_NAME__Group_1__0__Impl
	rule__VALID_IMAGE_NAME__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VALID_IMAGE_NAME__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVALID_IMAGE_NAMEAccess().getSolidusKeyword_1_0()); }
	'/'
	{ after(grammarAccess.getVALID_IMAGE_NAMEAccess().getSolidusKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VALID_IMAGE_NAME__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VALID_IMAGE_NAME__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VALID_IMAGE_NAME__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVALID_IMAGE_NAMEAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getVALID_IMAGE_NAMEAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VALID_IMAGE_TAG__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VALID_IMAGE_TAG__Group__0__Impl
	rule__VALID_IMAGE_TAG__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VALID_IMAGE_TAG__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVALID_IMAGE_TAGAccess().getAlternatives_0()); }
	(rule__VALID_IMAGE_TAG__Alternatives_0)
	{ after(grammarAccess.getVALID_IMAGE_TAGAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VALID_IMAGE_TAG__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VALID_IMAGE_TAG__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VALID_IMAGE_TAG__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVALID_IMAGE_TAGAccess().getAlternatives_1()); }
	(rule__VALID_IMAGE_TAG__Alternatives_1)*
	{ after(grammarAccess.getVALID_IMAGE_TAGAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Dockerfile__InstructionsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDockerfileAccess().getInstructionsInstructionParserRuleCall_0()); }
		ruleInstruction
		{ after(grammarAccess.getDockerfileAccess().getInstructionsInstructionParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Copy__Source_leftAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCopyAccess().getSource_leftAddSourceParserRuleCall_1_1_0_0()); }
		ruleAddSource
		{ after(grammarAccess.getCopyAccess().getSource_leftAddSourceParserRuleCall_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Copy__DestAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCopyAccess().getDestONE_SPACE_AND_WHATEVERTerminalRuleCall_1_1_1_0()); }
		RULE_ONE_SPACE_AND_WHATEVER
		{ after(grammarAccess.getCopyAccess().getDestONE_SPACE_AND_WHATEVERTerminalRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__User__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUserAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getUserAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Onbuild__InstructionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOnbuildAccess().getInstructionInstructionParserRuleCall_1_0()); }
		ruleInstruction
		{ after(grammarAccess.getOnbuildAccess().getInstructionInstructionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__From__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFromAccess().getNameVALID_IMAGE_NAMEParserRuleCall_1_0()); }
		ruleVALID_IMAGE_NAME
		{ after(grammarAccess.getFromAccess().getNameVALID_IMAGE_NAMEParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__From__TagAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFromAccess().getTagVALID_IMAGE_TAGParserRuleCall_2_1_0()); }
		ruleVALID_IMAGE_TAG
		{ after(grammarAccess.getFromAccess().getTagVALID_IMAGE_TAGParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Maintainer__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMaintainerAccess().getNameONE_SPACE_AND_WHATEVERTerminalRuleCall_1_0()); }
		RULE_ONE_SPACE_AND_WHATEVER
		{ after(grammarAccess.getMaintainerAccess().getNameONE_SPACE_AND_WHATEVERTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expose__PortsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExposeAccess().getPortsONE_SPACE_AND_WHATEVERTerminalRuleCall_1_0()); }
		RULE_ONE_SPACE_AND_WHATEVER
		{ after(grammarAccess.getExposeAccess().getPortsONE_SPACE_AND_WHATEVERTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSON_ARRAY__HeadAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJSON_ARRAYAccess().getHeadSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getJSON_ARRAYAccess().getHeadSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSON_ARRAY__TailAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJSON_ARRAYAccess().getTailSTRING_PREFIXED_WITH_COMMAParserRuleCall_2_0()); }
		ruleSTRING_PREFIXED_WITH_COMMA
		{ after(grammarAccess.getJSON_ARRAYAccess().getTailSTRING_PREFIXED_WITH_COMMAParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvWithSpace__KeyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnvWithSpaceAccess().getKeyIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getEnvWithSpaceAccess().getKeyIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvWithSpace__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnvWithSpaceAccess().getValueONE_SPACE_AND_WHATEVERTerminalRuleCall_1_0()); }
		RULE_ONE_SPACE_AND_WHATEVER
		{ after(grammarAccess.getEnvWithSpaceAccess().getValueONE_SPACE_AND_WHATEVERTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvWithEqual__KeyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnvWithEqualAccess().getKeyIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getEnvWithEqualAccess().getKeyIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvWithEqual__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnvWithEqualAccess().getValueENV_VALUE_WITH_EQUALTerminalRuleCall_1_0()); }
		RULE_ENV_VALUE_WITH_EQUAL
		{ after(grammarAccess.getEnvWithEqualAccess().getValueENV_VALUE_WITH_EQUALTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Workdir__PathAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWorkdirAccess().getPathONE_SPACE_AND_WHATEVERTerminalRuleCall_1_0()); }
		RULE_ONE_SPACE_AND_WHATEVER
		{ after(grammarAccess.getWorkdirAccess().getPathONE_SPACE_AND_WHATEVERTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Source_leftAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddAccess().getSource_leftAddSourceParserRuleCall_1_0()); }
		ruleAddSource
		{ after(grammarAccess.getAddAccess().getSource_leftAddSourceParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__DestAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddAccess().getDestONE_SPACE_AND_WHATEVERTerminalRuleCall_2_0()); }
		RULE_ONE_SPACE_AND_WHATEVER
		{ after(grammarAccess.getAddAccess().getDestONE_SPACE_AND_WHATEVERTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RunWithShell__CommandAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRunWithShellAccess().getCommandONE_SPACE_AND_WHATEVERTerminalRuleCall_0()); }
		RULE_ONE_SPACE_AND_WHATEVER
		{ after(grammarAccess.getRunWithShellAccess().getCommandONE_SPACE_AND_WHATEVERTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RunWithNoShell__ExecutableAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRunWithNoShellAccess().getExecutableSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getRunWithNoShellAccess().getExecutableSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RunWithNoShell__ParamsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRunWithNoShellAccess().getParamsSTRING_PREFIXED_WITH_COMMAParserRuleCall_2_0()); }
		ruleSTRING_PREFIXED_WITH_COMMA
		{ after(grammarAccess.getRunWithNoShellAccess().getParamsSTRING_PREFIXED_WITH_COMMAParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_SL_COMMENT : '#' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_ONE_SPACE_AND_WHATEVER : ' ' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_ENV_VALUE_WITH_EQUAL : '=' ~(('\n'|'\r'|' '))* ' '?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
