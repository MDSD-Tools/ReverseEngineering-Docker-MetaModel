/**
 * generated by Xtext 2.21.0
 */
package org.palladiosimulator.somox.docker.compose.composeFile.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.palladiosimulator.somox.docker.compose.composeFile.Build;
import org.palladiosimulator.somox.docker.compose.composeFile.ComposeFilePackage;
import org.palladiosimulator.somox.docker.compose.composeFile.CredentialSpec;
import org.palladiosimulator.somox.docker.compose.composeFile.Deploy;
import org.palladiosimulator.somox.docker.compose.composeFile.Healthcheck;
import org.palladiosimulator.somox.docker.compose.composeFile.List;
import org.palladiosimulator.somox.docker.compose.composeFile.ListOrMapping;
import org.palladiosimulator.somox.docker.compose.composeFile.Logging;
import org.palladiosimulator.somox.docker.compose.composeFile.Mapping;
import org.palladiosimulator.somox.docker.compose.composeFile.Ports;
import org.palladiosimulator.somox.docker.compose.composeFile.Service;
import org.palladiosimulator.somox.docker.compose.composeFile.ServiceSecrets;
import org.palladiosimulator.somox.docker.compose.composeFile.ServiceVolumes;
import org.palladiosimulator.somox.docker.compose.composeFile.Ulimits;
import org.palladiosimulator.somox.docker.compose.composeFile.ValueOrList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Service</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.ServiceImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.ServiceImpl#getBuild <em>Build</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.ServiceImpl#getCap_add <em>Cap add</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.ServiceImpl#getCap_drop <em>Cap drop</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.ServiceImpl#getCgroup_parent <em>Cgroup parent</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.ServiceImpl#getCommand <em>Command</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.ServiceImpl#getContainer_name <em>Container name</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.ServiceImpl#getCredential_spec <em>Credential spec</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.ServiceImpl#getDepends_on <em>Depends on</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.ServiceImpl#getDeploy <em>Deploy</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.ServiceImpl#getDevices <em>Devices</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.ServiceImpl#getDns <em>Dns</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.ServiceImpl#getDomainname <em>Domainname</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.ServiceImpl#getEntrypoint <em>Entrypoint</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.ServiceImpl#getEnv_file <em>Env file</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.ServiceImpl#getEnvironment <em>Environment</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.ServiceImpl#getExpose <em>Expose</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.ServiceImpl#getExternal_links <em>External links</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.ServiceImpl#getHealthcheck <em>Healthcheck</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.ServiceImpl#getHostname <em>Hostname</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.ServiceImpl#getImage <em>Image</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.ServiceImpl#getInit <em>Init</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.ServiceImpl#getIpc <em>Ipc</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.ServiceImpl#getIsolation <em>Isolation</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.ServiceImpl#getLabels <em>Labels</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.ServiceImpl#getLinks <em>Links</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.ServiceImpl#getLogging <em>Logging</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.ServiceImpl#getMac_address <em>Mac address</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.ServiceImpl#getNetwork_mode <em>Network mode</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.ServiceImpl#getNetworks <em>Networks</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.ServiceImpl#getPid <em>Pid</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.ServiceImpl#getPorts <em>Ports</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.ServiceImpl#getPrivileged <em>Privileged</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.ServiceImpl#getRead_only <em>Read only</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.ServiceImpl#getRestart <em>Restart</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.ServiceImpl#getSecrets <em>Secrets</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.ServiceImpl#getSecurity_opt <em>Security opt</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.ServiceImpl#getShm_size <em>Shm size</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.ServiceImpl#getStdin_open <em>Stdin open</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.ServiceImpl#getStop_grace_period <em>Stop grace period</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.ServiceImpl#getStop_signal <em>Stop signal</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.ServiceImpl#getSysctls <em>Sysctls</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.ServiceImpl#getTty <em>Tty</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.ServiceImpl#getUlimits <em>Ulimits</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.ServiceImpl#getUser <em>User</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.ServiceImpl#getUserns_mode <em>Userns mode</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.ServiceImpl#getVolumes <em>Volumes</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.ServiceImpl#getWorking_dir <em>Working dir</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ServiceImpl extends MinimalEObjectImpl.Container implements Service
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getBuild() <em>Build</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBuild()
   * @generated
   * @ordered
   */
  protected Build build;

  /**
   * The cached value of the '{@link #getCap_add() <em>Cap add</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCap_add()
   * @generated
   * @ordered
   */
  protected List cap_add;

  /**
   * The cached value of the '{@link #getCap_drop() <em>Cap drop</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCap_drop()
   * @generated
   * @ordered
   */
  protected List cap_drop;

  /**
   * The default value of the '{@link #getCgroup_parent() <em>Cgroup parent</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCgroup_parent()
   * @generated
   * @ordered
   */
  protected static final String CGROUP_PARENT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCgroup_parent() <em>Cgroup parent</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCgroup_parent()
   * @generated
   * @ordered
   */
  protected String cgroup_parent = CGROUP_PARENT_EDEFAULT;

  /**
   * The default value of the '{@link #getCommand() <em>Command</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCommand()
   * @generated
   * @ordered
   */
  protected static final String COMMAND_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCommand() <em>Command</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCommand()
   * @generated
   * @ordered
   */
  protected String command = COMMAND_EDEFAULT;

  /**
   * The default value of the '{@link #getContainer_name() <em>Container name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getContainer_name()
   * @generated
   * @ordered
   */
  protected static final String CONTAINER_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getContainer_name() <em>Container name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getContainer_name()
   * @generated
   * @ordered
   */
  protected String container_name = CONTAINER_NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getCredential_spec() <em>Credential spec</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCredential_spec()
   * @generated
   * @ordered
   */
  protected CredentialSpec credential_spec;

  /**
   * The cached value of the '{@link #getDepends_on() <em>Depends on</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDepends_on()
   * @generated
   * @ordered
   */
  protected List depends_on;

  /**
   * The cached value of the '{@link #getDeploy() <em>Deploy</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDeploy()
   * @generated
   * @ordered
   */
  protected Deploy deploy;

  /**
   * The cached value of the '{@link #getDevices() <em>Devices</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDevices()
   * @generated
   * @ordered
   */
  protected List devices;

  /**
   * The cached value of the '{@link #getDns() <em>Dns</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDns()
   * @generated
   * @ordered
   */
  protected List dns;

  /**
   * The default value of the '{@link #getDomainname() <em>Domainname</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDomainname()
   * @generated
   * @ordered
   */
  protected static final String DOMAINNAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDomainname() <em>Domainname</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDomainname()
   * @generated
   * @ordered
   */
  protected String domainname = DOMAINNAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getEntrypoint() <em>Entrypoint</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEntrypoint()
   * @generated
   * @ordered
   */
  protected ValueOrList entrypoint;

  /**
   * The cached value of the '{@link #getEnv_file() <em>Env file</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEnv_file()
   * @generated
   * @ordered
   */
  protected ValueOrList env_file;

  /**
   * The cached value of the '{@link #getEnvironment() <em>Environment</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEnvironment()
   * @generated
   * @ordered
   */
  protected Mapping environment;

  /**
   * The cached value of the '{@link #getExpose() <em>Expose</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExpose()
   * @generated
   * @ordered
   */
  protected List expose;

  /**
   * The cached value of the '{@link #getExternal_links() <em>External links</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExternal_links()
   * @generated
   * @ordered
   */
  protected ListOrMapping external_links;

  /**
   * The cached value of the '{@link #getHealthcheck() <em>Healthcheck</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHealthcheck()
   * @generated
   * @ordered
   */
  protected Healthcheck healthcheck;

  /**
   * The default value of the '{@link #getHostname() <em>Hostname</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHostname()
   * @generated
   * @ordered
   */
  protected static final String HOSTNAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getHostname() <em>Hostname</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHostname()
   * @generated
   * @ordered
   */
  protected String hostname = HOSTNAME_EDEFAULT;

  /**
   * The default value of the '{@link #getImage() <em>Image</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getImage()
   * @generated
   * @ordered
   */
  protected static final String IMAGE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getImage() <em>Image</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getImage()
   * @generated
   * @ordered
   */
  protected String image = IMAGE_EDEFAULT;

  /**
   * The default value of the '{@link #getInit() <em>Init</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInit()
   * @generated
   * @ordered
   */
  protected static final String INIT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getInit() <em>Init</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInit()
   * @generated
   * @ordered
   */
  protected String init = INIT_EDEFAULT;

  /**
   * The default value of the '{@link #getIpc() <em>Ipc</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIpc()
   * @generated
   * @ordered
   */
  protected static final String IPC_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getIpc() <em>Ipc</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIpc()
   * @generated
   * @ordered
   */
  protected String ipc = IPC_EDEFAULT;

  /**
   * The default value of the '{@link #getIsolation() <em>Isolation</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIsolation()
   * @generated
   * @ordered
   */
  protected static final String ISOLATION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getIsolation() <em>Isolation</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIsolation()
   * @generated
   * @ordered
   */
  protected String isolation = ISOLATION_EDEFAULT;

  /**
   * The cached value of the '{@link #getLabels() <em>Labels</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLabels()
   * @generated
   * @ordered
   */
  protected ListOrMapping labels;

  /**
   * The cached value of the '{@link #getLinks() <em>Links</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLinks()
   * @generated
   * @ordered
   */
  protected ListOrMapping links;

  /**
   * The cached value of the '{@link #getLogging() <em>Logging</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLogging()
   * @generated
   * @ordered
   */
  protected Logging logging;

  /**
   * The default value of the '{@link #getMac_address() <em>Mac address</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMac_address()
   * @generated
   * @ordered
   */
  protected static final String MAC_ADDRESS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getMac_address() <em>Mac address</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMac_address()
   * @generated
   * @ordered
   */
  protected String mac_address = MAC_ADDRESS_EDEFAULT;

  /**
   * The default value of the '{@link #getNetwork_mode() <em>Network mode</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNetwork_mode()
   * @generated
   * @ordered
   */
  protected static final String NETWORK_MODE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getNetwork_mode() <em>Network mode</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNetwork_mode()
   * @generated
   * @ordered
   */
  protected String network_mode = NETWORK_MODE_EDEFAULT;

  /**
   * The cached value of the '{@link #getNetworks() <em>Networks</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNetworks()
   * @generated
   * @ordered
   */
  protected List networks;

  /**
   * The default value of the '{@link #getPid() <em>Pid</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPid()
   * @generated
   * @ordered
   */
  protected static final String PID_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getPid() <em>Pid</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPid()
   * @generated
   * @ordered
   */
  protected String pid = PID_EDEFAULT;

  /**
   * The cached value of the '{@link #getPorts() <em>Ports</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPorts()
   * @generated
   * @ordered
   */
  protected Ports ports;

  /**
   * The default value of the '{@link #getPrivileged() <em>Privileged</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPrivileged()
   * @generated
   * @ordered
   */
  protected static final String PRIVILEGED_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getPrivileged() <em>Privileged</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPrivileged()
   * @generated
   * @ordered
   */
  protected String privileged = PRIVILEGED_EDEFAULT;

  /**
   * The default value of the '{@link #getRead_only() <em>Read only</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRead_only()
   * @generated
   * @ordered
   */
  protected static final String READ_ONLY_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getRead_only() <em>Read only</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRead_only()
   * @generated
   * @ordered
   */
  protected String read_only = READ_ONLY_EDEFAULT;

  /**
   * The default value of the '{@link #getRestart() <em>Restart</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRestart()
   * @generated
   * @ordered
   */
  protected static final String RESTART_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getRestart() <em>Restart</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRestart()
   * @generated
   * @ordered
   */
  protected String restart = RESTART_EDEFAULT;

  /**
   * The cached value of the '{@link #getSecrets() <em>Secrets</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSecrets()
   * @generated
   * @ordered
   */
  protected ServiceSecrets secrets;

  /**
   * The cached value of the '{@link #getSecurity_opt() <em>Security opt</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSecurity_opt()
   * @generated
   * @ordered
   */
  protected List security_opt;

  /**
   * The default value of the '{@link #getShm_size() <em>Shm size</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getShm_size()
   * @generated
   * @ordered
   */
  protected static final String SHM_SIZE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getShm_size() <em>Shm size</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getShm_size()
   * @generated
   * @ordered
   */
  protected String shm_size = SHM_SIZE_EDEFAULT;

  /**
   * The default value of the '{@link #getStdin_open() <em>Stdin open</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStdin_open()
   * @generated
   * @ordered
   */
  protected static final String STDIN_OPEN_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getStdin_open() <em>Stdin open</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStdin_open()
   * @generated
   * @ordered
   */
  protected String stdin_open = STDIN_OPEN_EDEFAULT;

  /**
   * The default value of the '{@link #getStop_grace_period() <em>Stop grace period</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStop_grace_period()
   * @generated
   * @ordered
   */
  protected static final String STOP_GRACE_PERIOD_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getStop_grace_period() <em>Stop grace period</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStop_grace_period()
   * @generated
   * @ordered
   */
  protected String stop_grace_period = STOP_GRACE_PERIOD_EDEFAULT;

  /**
   * The default value of the '{@link #getStop_signal() <em>Stop signal</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStop_signal()
   * @generated
   * @ordered
   */
  protected static final String STOP_SIGNAL_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getStop_signal() <em>Stop signal</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStop_signal()
   * @generated
   * @ordered
   */
  protected String stop_signal = STOP_SIGNAL_EDEFAULT;

  /**
   * The cached value of the '{@link #getSysctls() <em>Sysctls</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSysctls()
   * @generated
   * @ordered
   */
  protected EObject sysctls;

  /**
   * The default value of the '{@link #getTty() <em>Tty</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTty()
   * @generated
   * @ordered
   */
  protected static final String TTY_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getTty() <em>Tty</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTty()
   * @generated
   * @ordered
   */
  protected String tty = TTY_EDEFAULT;

  /**
   * The cached value of the '{@link #getUlimits() <em>Ulimits</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUlimits()
   * @generated
   * @ordered
   */
  protected Ulimits ulimits;

  /**
   * The default value of the '{@link #getUser() <em>User</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUser()
   * @generated
   * @ordered
   */
  protected static final String USER_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getUser() <em>User</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUser()
   * @generated
   * @ordered
   */
  protected String user = USER_EDEFAULT;

  /**
   * The default value of the '{@link #getUserns_mode() <em>Userns mode</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUserns_mode()
   * @generated
   * @ordered
   */
  protected static final String USERNS_MODE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getUserns_mode() <em>Userns mode</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUserns_mode()
   * @generated
   * @ordered
   */
  protected String userns_mode = USERNS_MODE_EDEFAULT;

  /**
   * The cached value of the '{@link #getVolumes() <em>Volumes</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVolumes()
   * @generated
   * @ordered
   */
  protected ServiceVolumes volumes;

  /**
   * The default value of the '{@link #getWorking_dir() <em>Working dir</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWorking_dir()
   * @generated
   * @ordered
   */
  protected static final String WORKING_DIR_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getWorking_dir() <em>Working dir</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWorking_dir()
   * @generated
   * @ordered
   */
  protected String working_dir = WORKING_DIR_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ServiceImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ComposeFilePackage.Literals.SERVICE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Build getBuild()
  {
    return build;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetBuild(Build newBuild, NotificationChain msgs)
  {
    Build oldBuild = build;
    build = newBuild;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__BUILD, oldBuild, newBuild);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBuild(Build newBuild)
  {
    if (newBuild != build)
    {
      NotificationChain msgs = null;
      if (build != null)
        msgs = ((InternalEObject)build).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ComposeFilePackage.SERVICE__BUILD, null, msgs);
      if (newBuild != null)
        msgs = ((InternalEObject)newBuild).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ComposeFilePackage.SERVICE__BUILD, null, msgs);
      msgs = basicSetBuild(newBuild, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__BUILD, newBuild, newBuild));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public List getCap_add()
  {
    return cap_add;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCap_add(List newCap_add, NotificationChain msgs)
  {
    List oldCap_add = cap_add;
    cap_add = newCap_add;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__CAP_ADD, oldCap_add, newCap_add);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCap_add(List newCap_add)
  {
    if (newCap_add != cap_add)
    {
      NotificationChain msgs = null;
      if (cap_add != null)
        msgs = ((InternalEObject)cap_add).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ComposeFilePackage.SERVICE__CAP_ADD, null, msgs);
      if (newCap_add != null)
        msgs = ((InternalEObject)newCap_add).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ComposeFilePackage.SERVICE__CAP_ADD, null, msgs);
      msgs = basicSetCap_add(newCap_add, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__CAP_ADD, newCap_add, newCap_add));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public List getCap_drop()
  {
    return cap_drop;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCap_drop(List newCap_drop, NotificationChain msgs)
  {
    List oldCap_drop = cap_drop;
    cap_drop = newCap_drop;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__CAP_DROP, oldCap_drop, newCap_drop);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCap_drop(List newCap_drop)
  {
    if (newCap_drop != cap_drop)
    {
      NotificationChain msgs = null;
      if (cap_drop != null)
        msgs = ((InternalEObject)cap_drop).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ComposeFilePackage.SERVICE__CAP_DROP, null, msgs);
      if (newCap_drop != null)
        msgs = ((InternalEObject)newCap_drop).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ComposeFilePackage.SERVICE__CAP_DROP, null, msgs);
      msgs = basicSetCap_drop(newCap_drop, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__CAP_DROP, newCap_drop, newCap_drop));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getCgroup_parent()
  {
    return cgroup_parent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCgroup_parent(String newCgroup_parent)
  {
    String oldCgroup_parent = cgroup_parent;
    cgroup_parent = newCgroup_parent;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__CGROUP_PARENT, oldCgroup_parent, cgroup_parent));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getCommand()
  {
    return command;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCommand(String newCommand)
  {
    String oldCommand = command;
    command = newCommand;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__COMMAND, oldCommand, command));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getContainer_name()
  {
    return container_name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setContainer_name(String newContainer_name)
  {
    String oldContainer_name = container_name;
    container_name = newContainer_name;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__CONTAINER_NAME, oldContainer_name, container_name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public CredentialSpec getCredential_spec()
  {
    return credential_spec;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCredential_spec(CredentialSpec newCredential_spec, NotificationChain msgs)
  {
    CredentialSpec oldCredential_spec = credential_spec;
    credential_spec = newCredential_spec;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__CREDENTIAL_SPEC, oldCredential_spec, newCredential_spec);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCredential_spec(CredentialSpec newCredential_spec)
  {
    if (newCredential_spec != credential_spec)
    {
      NotificationChain msgs = null;
      if (credential_spec != null)
        msgs = ((InternalEObject)credential_spec).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ComposeFilePackage.SERVICE__CREDENTIAL_SPEC, null, msgs);
      if (newCredential_spec != null)
        msgs = ((InternalEObject)newCredential_spec).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ComposeFilePackage.SERVICE__CREDENTIAL_SPEC, null, msgs);
      msgs = basicSetCredential_spec(newCredential_spec, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__CREDENTIAL_SPEC, newCredential_spec, newCredential_spec));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public List getDepends_on()
  {
    return depends_on;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDepends_on(List newDepends_on, NotificationChain msgs)
  {
    List oldDepends_on = depends_on;
    depends_on = newDepends_on;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__DEPENDS_ON, oldDepends_on, newDepends_on);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDepends_on(List newDepends_on)
  {
    if (newDepends_on != depends_on)
    {
      NotificationChain msgs = null;
      if (depends_on != null)
        msgs = ((InternalEObject)depends_on).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ComposeFilePackage.SERVICE__DEPENDS_ON, null, msgs);
      if (newDepends_on != null)
        msgs = ((InternalEObject)newDepends_on).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ComposeFilePackage.SERVICE__DEPENDS_ON, null, msgs);
      msgs = basicSetDepends_on(newDepends_on, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__DEPENDS_ON, newDepends_on, newDepends_on));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Deploy getDeploy()
  {
    return deploy;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDeploy(Deploy newDeploy, NotificationChain msgs)
  {
    Deploy oldDeploy = deploy;
    deploy = newDeploy;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__DEPLOY, oldDeploy, newDeploy);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDeploy(Deploy newDeploy)
  {
    if (newDeploy != deploy)
    {
      NotificationChain msgs = null;
      if (deploy != null)
        msgs = ((InternalEObject)deploy).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ComposeFilePackage.SERVICE__DEPLOY, null, msgs);
      if (newDeploy != null)
        msgs = ((InternalEObject)newDeploy).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ComposeFilePackage.SERVICE__DEPLOY, null, msgs);
      msgs = basicSetDeploy(newDeploy, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__DEPLOY, newDeploy, newDeploy));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public List getDevices()
  {
    return devices;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDevices(List newDevices, NotificationChain msgs)
  {
    List oldDevices = devices;
    devices = newDevices;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__DEVICES, oldDevices, newDevices);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDevices(List newDevices)
  {
    if (newDevices != devices)
    {
      NotificationChain msgs = null;
      if (devices != null)
        msgs = ((InternalEObject)devices).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ComposeFilePackage.SERVICE__DEVICES, null, msgs);
      if (newDevices != null)
        msgs = ((InternalEObject)newDevices).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ComposeFilePackage.SERVICE__DEVICES, null, msgs);
      msgs = basicSetDevices(newDevices, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__DEVICES, newDevices, newDevices));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public List getDns()
  {
    return dns;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDns(List newDns, NotificationChain msgs)
  {
    List oldDns = dns;
    dns = newDns;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__DNS, oldDns, newDns);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDns(List newDns)
  {
    if (newDns != dns)
    {
      NotificationChain msgs = null;
      if (dns != null)
        msgs = ((InternalEObject)dns).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ComposeFilePackage.SERVICE__DNS, null, msgs);
      if (newDns != null)
        msgs = ((InternalEObject)newDns).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ComposeFilePackage.SERVICE__DNS, null, msgs);
      msgs = basicSetDns(newDns, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__DNS, newDns, newDns));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getDomainname()
  {
    return domainname;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDomainname(String newDomainname)
  {
    String oldDomainname = domainname;
    domainname = newDomainname;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__DOMAINNAME, oldDomainname, domainname));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ValueOrList getEntrypoint()
  {
    return entrypoint;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetEntrypoint(ValueOrList newEntrypoint, NotificationChain msgs)
  {
    ValueOrList oldEntrypoint = entrypoint;
    entrypoint = newEntrypoint;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__ENTRYPOINT, oldEntrypoint, newEntrypoint);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEntrypoint(ValueOrList newEntrypoint)
  {
    if (newEntrypoint != entrypoint)
    {
      NotificationChain msgs = null;
      if (entrypoint != null)
        msgs = ((InternalEObject)entrypoint).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ComposeFilePackage.SERVICE__ENTRYPOINT, null, msgs);
      if (newEntrypoint != null)
        msgs = ((InternalEObject)newEntrypoint).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ComposeFilePackage.SERVICE__ENTRYPOINT, null, msgs);
      msgs = basicSetEntrypoint(newEntrypoint, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__ENTRYPOINT, newEntrypoint, newEntrypoint));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ValueOrList getEnv_file()
  {
    return env_file;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetEnv_file(ValueOrList newEnv_file, NotificationChain msgs)
  {
    ValueOrList oldEnv_file = env_file;
    env_file = newEnv_file;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__ENV_FILE, oldEnv_file, newEnv_file);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEnv_file(ValueOrList newEnv_file)
  {
    if (newEnv_file != env_file)
    {
      NotificationChain msgs = null;
      if (env_file != null)
        msgs = ((InternalEObject)env_file).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ComposeFilePackage.SERVICE__ENV_FILE, null, msgs);
      if (newEnv_file != null)
        msgs = ((InternalEObject)newEnv_file).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ComposeFilePackage.SERVICE__ENV_FILE, null, msgs);
      msgs = basicSetEnv_file(newEnv_file, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__ENV_FILE, newEnv_file, newEnv_file));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Mapping getEnvironment()
  {
    return environment;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetEnvironment(Mapping newEnvironment, NotificationChain msgs)
  {
    Mapping oldEnvironment = environment;
    environment = newEnvironment;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__ENVIRONMENT, oldEnvironment, newEnvironment);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEnvironment(Mapping newEnvironment)
  {
    if (newEnvironment != environment)
    {
      NotificationChain msgs = null;
      if (environment != null)
        msgs = ((InternalEObject)environment).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ComposeFilePackage.SERVICE__ENVIRONMENT, null, msgs);
      if (newEnvironment != null)
        msgs = ((InternalEObject)newEnvironment).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ComposeFilePackage.SERVICE__ENVIRONMENT, null, msgs);
      msgs = basicSetEnvironment(newEnvironment, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__ENVIRONMENT, newEnvironment, newEnvironment));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public List getExpose()
  {
    return expose;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetExpose(List newExpose, NotificationChain msgs)
  {
    List oldExpose = expose;
    expose = newExpose;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__EXPOSE, oldExpose, newExpose);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setExpose(List newExpose)
  {
    if (newExpose != expose)
    {
      NotificationChain msgs = null;
      if (expose != null)
        msgs = ((InternalEObject)expose).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ComposeFilePackage.SERVICE__EXPOSE, null, msgs);
      if (newExpose != null)
        msgs = ((InternalEObject)newExpose).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ComposeFilePackage.SERVICE__EXPOSE, null, msgs);
      msgs = basicSetExpose(newExpose, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__EXPOSE, newExpose, newExpose));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ListOrMapping getExternal_links()
  {
    return external_links;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetExternal_links(ListOrMapping newExternal_links, NotificationChain msgs)
  {
    ListOrMapping oldExternal_links = external_links;
    external_links = newExternal_links;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__EXTERNAL_LINKS, oldExternal_links, newExternal_links);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setExternal_links(ListOrMapping newExternal_links)
  {
    if (newExternal_links != external_links)
    {
      NotificationChain msgs = null;
      if (external_links != null)
        msgs = ((InternalEObject)external_links).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ComposeFilePackage.SERVICE__EXTERNAL_LINKS, null, msgs);
      if (newExternal_links != null)
        msgs = ((InternalEObject)newExternal_links).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ComposeFilePackage.SERVICE__EXTERNAL_LINKS, null, msgs);
      msgs = basicSetExternal_links(newExternal_links, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__EXTERNAL_LINKS, newExternal_links, newExternal_links));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Healthcheck getHealthcheck()
  {
    return healthcheck;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetHealthcheck(Healthcheck newHealthcheck, NotificationChain msgs)
  {
    Healthcheck oldHealthcheck = healthcheck;
    healthcheck = newHealthcheck;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__HEALTHCHECK, oldHealthcheck, newHealthcheck);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setHealthcheck(Healthcheck newHealthcheck)
  {
    if (newHealthcheck != healthcheck)
    {
      NotificationChain msgs = null;
      if (healthcheck != null)
        msgs = ((InternalEObject)healthcheck).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ComposeFilePackage.SERVICE__HEALTHCHECK, null, msgs);
      if (newHealthcheck != null)
        msgs = ((InternalEObject)newHealthcheck).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ComposeFilePackage.SERVICE__HEALTHCHECK, null, msgs);
      msgs = basicSetHealthcheck(newHealthcheck, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__HEALTHCHECK, newHealthcheck, newHealthcheck));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getHostname()
  {
    return hostname;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setHostname(String newHostname)
  {
    String oldHostname = hostname;
    hostname = newHostname;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__HOSTNAME, oldHostname, hostname));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getImage()
  {
    return image;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setImage(String newImage)
  {
    String oldImage = image;
    image = newImage;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__IMAGE, oldImage, image));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getInit()
  {
    return init;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setInit(String newInit)
  {
    String oldInit = init;
    init = newInit;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__INIT, oldInit, init));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getIpc()
  {
    return ipc;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setIpc(String newIpc)
  {
    String oldIpc = ipc;
    ipc = newIpc;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__IPC, oldIpc, ipc));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getIsolation()
  {
    return isolation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setIsolation(String newIsolation)
  {
    String oldIsolation = isolation;
    isolation = newIsolation;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__ISOLATION, oldIsolation, isolation));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ListOrMapping getLabels()
  {
    return labels;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetLabels(ListOrMapping newLabels, NotificationChain msgs)
  {
    ListOrMapping oldLabels = labels;
    labels = newLabels;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__LABELS, oldLabels, newLabels);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLabels(ListOrMapping newLabels)
  {
    if (newLabels != labels)
    {
      NotificationChain msgs = null;
      if (labels != null)
        msgs = ((InternalEObject)labels).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ComposeFilePackage.SERVICE__LABELS, null, msgs);
      if (newLabels != null)
        msgs = ((InternalEObject)newLabels).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ComposeFilePackage.SERVICE__LABELS, null, msgs);
      msgs = basicSetLabels(newLabels, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__LABELS, newLabels, newLabels));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ListOrMapping getLinks()
  {
    return links;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetLinks(ListOrMapping newLinks, NotificationChain msgs)
  {
    ListOrMapping oldLinks = links;
    links = newLinks;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__LINKS, oldLinks, newLinks);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLinks(ListOrMapping newLinks)
  {
    if (newLinks != links)
    {
      NotificationChain msgs = null;
      if (links != null)
        msgs = ((InternalEObject)links).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ComposeFilePackage.SERVICE__LINKS, null, msgs);
      if (newLinks != null)
        msgs = ((InternalEObject)newLinks).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ComposeFilePackage.SERVICE__LINKS, null, msgs);
      msgs = basicSetLinks(newLinks, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__LINKS, newLinks, newLinks));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Logging getLogging()
  {
    return logging;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetLogging(Logging newLogging, NotificationChain msgs)
  {
    Logging oldLogging = logging;
    logging = newLogging;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__LOGGING, oldLogging, newLogging);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLogging(Logging newLogging)
  {
    if (newLogging != logging)
    {
      NotificationChain msgs = null;
      if (logging != null)
        msgs = ((InternalEObject)logging).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ComposeFilePackage.SERVICE__LOGGING, null, msgs);
      if (newLogging != null)
        msgs = ((InternalEObject)newLogging).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ComposeFilePackage.SERVICE__LOGGING, null, msgs);
      msgs = basicSetLogging(newLogging, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__LOGGING, newLogging, newLogging));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getMac_address()
  {
    return mac_address;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMac_address(String newMac_address)
  {
    String oldMac_address = mac_address;
    mac_address = newMac_address;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__MAC_ADDRESS, oldMac_address, mac_address));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getNetwork_mode()
  {
    return network_mode;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNetwork_mode(String newNetwork_mode)
  {
    String oldNetwork_mode = network_mode;
    network_mode = newNetwork_mode;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__NETWORK_MODE, oldNetwork_mode, network_mode));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public List getNetworks()
  {
    return networks;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetNetworks(List newNetworks, NotificationChain msgs)
  {
    List oldNetworks = networks;
    networks = newNetworks;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__NETWORKS, oldNetworks, newNetworks);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNetworks(List newNetworks)
  {
    if (newNetworks != networks)
    {
      NotificationChain msgs = null;
      if (networks != null)
        msgs = ((InternalEObject)networks).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ComposeFilePackage.SERVICE__NETWORKS, null, msgs);
      if (newNetworks != null)
        msgs = ((InternalEObject)newNetworks).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ComposeFilePackage.SERVICE__NETWORKS, null, msgs);
      msgs = basicSetNetworks(newNetworks, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__NETWORKS, newNetworks, newNetworks));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getPid()
  {
    return pid;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPid(String newPid)
  {
    String oldPid = pid;
    pid = newPid;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__PID, oldPid, pid));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Ports getPorts()
  {
    return ports;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPorts(Ports newPorts, NotificationChain msgs)
  {
    Ports oldPorts = ports;
    ports = newPorts;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__PORTS, oldPorts, newPorts);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPorts(Ports newPorts)
  {
    if (newPorts != ports)
    {
      NotificationChain msgs = null;
      if (ports != null)
        msgs = ((InternalEObject)ports).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ComposeFilePackage.SERVICE__PORTS, null, msgs);
      if (newPorts != null)
        msgs = ((InternalEObject)newPorts).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ComposeFilePackage.SERVICE__PORTS, null, msgs);
      msgs = basicSetPorts(newPorts, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__PORTS, newPorts, newPorts));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getPrivileged()
  {
    return privileged;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPrivileged(String newPrivileged)
  {
    String oldPrivileged = privileged;
    privileged = newPrivileged;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__PRIVILEGED, oldPrivileged, privileged));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getRead_only()
  {
    return read_only;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRead_only(String newRead_only)
  {
    String oldRead_only = read_only;
    read_only = newRead_only;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__READ_ONLY, oldRead_only, read_only));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getRestart()
  {
    return restart;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRestart(String newRestart)
  {
    String oldRestart = restart;
    restart = newRestart;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__RESTART, oldRestart, restart));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ServiceSecrets getSecrets()
  {
    return secrets;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSecrets(ServiceSecrets newSecrets, NotificationChain msgs)
  {
    ServiceSecrets oldSecrets = secrets;
    secrets = newSecrets;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__SECRETS, oldSecrets, newSecrets);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSecrets(ServiceSecrets newSecrets)
  {
    if (newSecrets != secrets)
    {
      NotificationChain msgs = null;
      if (secrets != null)
        msgs = ((InternalEObject)secrets).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ComposeFilePackage.SERVICE__SECRETS, null, msgs);
      if (newSecrets != null)
        msgs = ((InternalEObject)newSecrets).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ComposeFilePackage.SERVICE__SECRETS, null, msgs);
      msgs = basicSetSecrets(newSecrets, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__SECRETS, newSecrets, newSecrets));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public List getSecurity_opt()
  {
    return security_opt;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSecurity_opt(List newSecurity_opt, NotificationChain msgs)
  {
    List oldSecurity_opt = security_opt;
    security_opt = newSecurity_opt;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__SECURITY_OPT, oldSecurity_opt, newSecurity_opt);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSecurity_opt(List newSecurity_opt)
  {
    if (newSecurity_opt != security_opt)
    {
      NotificationChain msgs = null;
      if (security_opt != null)
        msgs = ((InternalEObject)security_opt).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ComposeFilePackage.SERVICE__SECURITY_OPT, null, msgs);
      if (newSecurity_opt != null)
        msgs = ((InternalEObject)newSecurity_opt).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ComposeFilePackage.SERVICE__SECURITY_OPT, null, msgs);
      msgs = basicSetSecurity_opt(newSecurity_opt, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__SECURITY_OPT, newSecurity_opt, newSecurity_opt));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getShm_size()
  {
    return shm_size;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setShm_size(String newShm_size)
  {
    String oldShm_size = shm_size;
    shm_size = newShm_size;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__SHM_SIZE, oldShm_size, shm_size));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getStdin_open()
  {
    return stdin_open;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setStdin_open(String newStdin_open)
  {
    String oldStdin_open = stdin_open;
    stdin_open = newStdin_open;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__STDIN_OPEN, oldStdin_open, stdin_open));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getStop_grace_period()
  {
    return stop_grace_period;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setStop_grace_period(String newStop_grace_period)
  {
    String oldStop_grace_period = stop_grace_period;
    stop_grace_period = newStop_grace_period;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__STOP_GRACE_PERIOD, oldStop_grace_period, stop_grace_period));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getStop_signal()
  {
    return stop_signal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setStop_signal(String newStop_signal)
  {
    String oldStop_signal = stop_signal;
    stop_signal = newStop_signal;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__STOP_SIGNAL, oldStop_signal, stop_signal));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject getSysctls()
  {
    return sysctls;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSysctls(EObject newSysctls, NotificationChain msgs)
  {
    EObject oldSysctls = sysctls;
    sysctls = newSysctls;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__SYSCTLS, oldSysctls, newSysctls);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSysctls(EObject newSysctls)
  {
    if (newSysctls != sysctls)
    {
      NotificationChain msgs = null;
      if (sysctls != null)
        msgs = ((InternalEObject)sysctls).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ComposeFilePackage.SERVICE__SYSCTLS, null, msgs);
      if (newSysctls != null)
        msgs = ((InternalEObject)newSysctls).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ComposeFilePackage.SERVICE__SYSCTLS, null, msgs);
      msgs = basicSetSysctls(newSysctls, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__SYSCTLS, newSysctls, newSysctls));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getTty()
  {
    return tty;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTty(String newTty)
  {
    String oldTty = tty;
    tty = newTty;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__TTY, oldTty, tty));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Ulimits getUlimits()
  {
    return ulimits;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetUlimits(Ulimits newUlimits, NotificationChain msgs)
  {
    Ulimits oldUlimits = ulimits;
    ulimits = newUlimits;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__ULIMITS, oldUlimits, newUlimits);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setUlimits(Ulimits newUlimits)
  {
    if (newUlimits != ulimits)
    {
      NotificationChain msgs = null;
      if (ulimits != null)
        msgs = ((InternalEObject)ulimits).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ComposeFilePackage.SERVICE__ULIMITS, null, msgs);
      if (newUlimits != null)
        msgs = ((InternalEObject)newUlimits).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ComposeFilePackage.SERVICE__ULIMITS, null, msgs);
      msgs = basicSetUlimits(newUlimits, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__ULIMITS, newUlimits, newUlimits));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getUser()
  {
    return user;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setUser(String newUser)
  {
    String oldUser = user;
    user = newUser;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__USER, oldUser, user));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getUserns_mode()
  {
    return userns_mode;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setUserns_mode(String newUserns_mode)
  {
    String oldUserns_mode = userns_mode;
    userns_mode = newUserns_mode;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__USERNS_MODE, oldUserns_mode, userns_mode));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ServiceVolumes getVolumes()
  {
    return volumes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetVolumes(ServiceVolumes newVolumes, NotificationChain msgs)
  {
    ServiceVolumes oldVolumes = volumes;
    volumes = newVolumes;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__VOLUMES, oldVolumes, newVolumes);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVolumes(ServiceVolumes newVolumes)
  {
    if (newVolumes != volumes)
    {
      NotificationChain msgs = null;
      if (volumes != null)
        msgs = ((InternalEObject)volumes).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ComposeFilePackage.SERVICE__VOLUMES, null, msgs);
      if (newVolumes != null)
        msgs = ((InternalEObject)newVolumes).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ComposeFilePackage.SERVICE__VOLUMES, null, msgs);
      msgs = basicSetVolumes(newVolumes, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__VOLUMES, newVolumes, newVolumes));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getWorking_dir()
  {
    return working_dir;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setWorking_dir(String newWorking_dir)
  {
    String oldWorking_dir = working_dir;
    working_dir = newWorking_dir;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.SERVICE__WORKING_DIR, oldWorking_dir, working_dir));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case ComposeFilePackage.SERVICE__BUILD:
        return basicSetBuild(null, msgs);
      case ComposeFilePackage.SERVICE__CAP_ADD:
        return basicSetCap_add(null, msgs);
      case ComposeFilePackage.SERVICE__CAP_DROP:
        return basicSetCap_drop(null, msgs);
      case ComposeFilePackage.SERVICE__CREDENTIAL_SPEC:
        return basicSetCredential_spec(null, msgs);
      case ComposeFilePackage.SERVICE__DEPENDS_ON:
        return basicSetDepends_on(null, msgs);
      case ComposeFilePackage.SERVICE__DEPLOY:
        return basicSetDeploy(null, msgs);
      case ComposeFilePackage.SERVICE__DEVICES:
        return basicSetDevices(null, msgs);
      case ComposeFilePackage.SERVICE__DNS:
        return basicSetDns(null, msgs);
      case ComposeFilePackage.SERVICE__ENTRYPOINT:
        return basicSetEntrypoint(null, msgs);
      case ComposeFilePackage.SERVICE__ENV_FILE:
        return basicSetEnv_file(null, msgs);
      case ComposeFilePackage.SERVICE__ENVIRONMENT:
        return basicSetEnvironment(null, msgs);
      case ComposeFilePackage.SERVICE__EXPOSE:
        return basicSetExpose(null, msgs);
      case ComposeFilePackage.SERVICE__EXTERNAL_LINKS:
        return basicSetExternal_links(null, msgs);
      case ComposeFilePackage.SERVICE__HEALTHCHECK:
        return basicSetHealthcheck(null, msgs);
      case ComposeFilePackage.SERVICE__LABELS:
        return basicSetLabels(null, msgs);
      case ComposeFilePackage.SERVICE__LINKS:
        return basicSetLinks(null, msgs);
      case ComposeFilePackage.SERVICE__LOGGING:
        return basicSetLogging(null, msgs);
      case ComposeFilePackage.SERVICE__NETWORKS:
        return basicSetNetworks(null, msgs);
      case ComposeFilePackage.SERVICE__PORTS:
        return basicSetPorts(null, msgs);
      case ComposeFilePackage.SERVICE__SECRETS:
        return basicSetSecrets(null, msgs);
      case ComposeFilePackage.SERVICE__SECURITY_OPT:
        return basicSetSecurity_opt(null, msgs);
      case ComposeFilePackage.SERVICE__SYSCTLS:
        return basicSetSysctls(null, msgs);
      case ComposeFilePackage.SERVICE__ULIMITS:
        return basicSetUlimits(null, msgs);
      case ComposeFilePackage.SERVICE__VOLUMES:
        return basicSetVolumes(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ComposeFilePackage.SERVICE__NAME:
        return getName();
      case ComposeFilePackage.SERVICE__BUILD:
        return getBuild();
      case ComposeFilePackage.SERVICE__CAP_ADD:
        return getCap_add();
      case ComposeFilePackage.SERVICE__CAP_DROP:
        return getCap_drop();
      case ComposeFilePackage.SERVICE__CGROUP_PARENT:
        return getCgroup_parent();
      case ComposeFilePackage.SERVICE__COMMAND:
        return getCommand();
      case ComposeFilePackage.SERVICE__CONTAINER_NAME:
        return getContainer_name();
      case ComposeFilePackage.SERVICE__CREDENTIAL_SPEC:
        return getCredential_spec();
      case ComposeFilePackage.SERVICE__DEPENDS_ON:
        return getDepends_on();
      case ComposeFilePackage.SERVICE__DEPLOY:
        return getDeploy();
      case ComposeFilePackage.SERVICE__DEVICES:
        return getDevices();
      case ComposeFilePackage.SERVICE__DNS:
        return getDns();
      case ComposeFilePackage.SERVICE__DOMAINNAME:
        return getDomainname();
      case ComposeFilePackage.SERVICE__ENTRYPOINT:
        return getEntrypoint();
      case ComposeFilePackage.SERVICE__ENV_FILE:
        return getEnv_file();
      case ComposeFilePackage.SERVICE__ENVIRONMENT:
        return getEnvironment();
      case ComposeFilePackage.SERVICE__EXPOSE:
        return getExpose();
      case ComposeFilePackage.SERVICE__EXTERNAL_LINKS:
        return getExternal_links();
      case ComposeFilePackage.SERVICE__HEALTHCHECK:
        return getHealthcheck();
      case ComposeFilePackage.SERVICE__HOSTNAME:
        return getHostname();
      case ComposeFilePackage.SERVICE__IMAGE:
        return getImage();
      case ComposeFilePackage.SERVICE__INIT:
        return getInit();
      case ComposeFilePackage.SERVICE__IPC:
        return getIpc();
      case ComposeFilePackage.SERVICE__ISOLATION:
        return getIsolation();
      case ComposeFilePackage.SERVICE__LABELS:
        return getLabels();
      case ComposeFilePackage.SERVICE__LINKS:
        return getLinks();
      case ComposeFilePackage.SERVICE__LOGGING:
        return getLogging();
      case ComposeFilePackage.SERVICE__MAC_ADDRESS:
        return getMac_address();
      case ComposeFilePackage.SERVICE__NETWORK_MODE:
        return getNetwork_mode();
      case ComposeFilePackage.SERVICE__NETWORKS:
        return getNetworks();
      case ComposeFilePackage.SERVICE__PID:
        return getPid();
      case ComposeFilePackage.SERVICE__PORTS:
        return getPorts();
      case ComposeFilePackage.SERVICE__PRIVILEGED:
        return getPrivileged();
      case ComposeFilePackage.SERVICE__READ_ONLY:
        return getRead_only();
      case ComposeFilePackage.SERVICE__RESTART:
        return getRestart();
      case ComposeFilePackage.SERVICE__SECRETS:
        return getSecrets();
      case ComposeFilePackage.SERVICE__SECURITY_OPT:
        return getSecurity_opt();
      case ComposeFilePackage.SERVICE__SHM_SIZE:
        return getShm_size();
      case ComposeFilePackage.SERVICE__STDIN_OPEN:
        return getStdin_open();
      case ComposeFilePackage.SERVICE__STOP_GRACE_PERIOD:
        return getStop_grace_period();
      case ComposeFilePackage.SERVICE__STOP_SIGNAL:
        return getStop_signal();
      case ComposeFilePackage.SERVICE__SYSCTLS:
        return getSysctls();
      case ComposeFilePackage.SERVICE__TTY:
        return getTty();
      case ComposeFilePackage.SERVICE__ULIMITS:
        return getUlimits();
      case ComposeFilePackage.SERVICE__USER:
        return getUser();
      case ComposeFilePackage.SERVICE__USERNS_MODE:
        return getUserns_mode();
      case ComposeFilePackage.SERVICE__VOLUMES:
        return getVolumes();
      case ComposeFilePackage.SERVICE__WORKING_DIR:
        return getWorking_dir();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ComposeFilePackage.SERVICE__NAME:
        setName((String)newValue);
        return;
      case ComposeFilePackage.SERVICE__BUILD:
        setBuild((Build)newValue);
        return;
      case ComposeFilePackage.SERVICE__CAP_ADD:
        setCap_add((List)newValue);
        return;
      case ComposeFilePackage.SERVICE__CAP_DROP:
        setCap_drop((List)newValue);
        return;
      case ComposeFilePackage.SERVICE__CGROUP_PARENT:
        setCgroup_parent((String)newValue);
        return;
      case ComposeFilePackage.SERVICE__COMMAND:
        setCommand((String)newValue);
        return;
      case ComposeFilePackage.SERVICE__CONTAINER_NAME:
        setContainer_name((String)newValue);
        return;
      case ComposeFilePackage.SERVICE__CREDENTIAL_SPEC:
        setCredential_spec((CredentialSpec)newValue);
        return;
      case ComposeFilePackage.SERVICE__DEPENDS_ON:
        setDepends_on((List)newValue);
        return;
      case ComposeFilePackage.SERVICE__DEPLOY:
        setDeploy((Deploy)newValue);
        return;
      case ComposeFilePackage.SERVICE__DEVICES:
        setDevices((List)newValue);
        return;
      case ComposeFilePackage.SERVICE__DNS:
        setDns((List)newValue);
        return;
      case ComposeFilePackage.SERVICE__DOMAINNAME:
        setDomainname((String)newValue);
        return;
      case ComposeFilePackage.SERVICE__ENTRYPOINT:
        setEntrypoint((ValueOrList)newValue);
        return;
      case ComposeFilePackage.SERVICE__ENV_FILE:
        setEnv_file((ValueOrList)newValue);
        return;
      case ComposeFilePackage.SERVICE__ENVIRONMENT:
        setEnvironment((Mapping)newValue);
        return;
      case ComposeFilePackage.SERVICE__EXPOSE:
        setExpose((List)newValue);
        return;
      case ComposeFilePackage.SERVICE__EXTERNAL_LINKS:
        setExternal_links((ListOrMapping)newValue);
        return;
      case ComposeFilePackage.SERVICE__HEALTHCHECK:
        setHealthcheck((Healthcheck)newValue);
        return;
      case ComposeFilePackage.SERVICE__HOSTNAME:
        setHostname((String)newValue);
        return;
      case ComposeFilePackage.SERVICE__IMAGE:
        setImage((String)newValue);
        return;
      case ComposeFilePackage.SERVICE__INIT:
        setInit((String)newValue);
        return;
      case ComposeFilePackage.SERVICE__IPC:
        setIpc((String)newValue);
        return;
      case ComposeFilePackage.SERVICE__ISOLATION:
        setIsolation((String)newValue);
        return;
      case ComposeFilePackage.SERVICE__LABELS:
        setLabels((ListOrMapping)newValue);
        return;
      case ComposeFilePackage.SERVICE__LINKS:
        setLinks((ListOrMapping)newValue);
        return;
      case ComposeFilePackage.SERVICE__LOGGING:
        setLogging((Logging)newValue);
        return;
      case ComposeFilePackage.SERVICE__MAC_ADDRESS:
        setMac_address((String)newValue);
        return;
      case ComposeFilePackage.SERVICE__NETWORK_MODE:
        setNetwork_mode((String)newValue);
        return;
      case ComposeFilePackage.SERVICE__NETWORKS:
        setNetworks((List)newValue);
        return;
      case ComposeFilePackage.SERVICE__PID:
        setPid((String)newValue);
        return;
      case ComposeFilePackage.SERVICE__PORTS:
        setPorts((Ports)newValue);
        return;
      case ComposeFilePackage.SERVICE__PRIVILEGED:
        setPrivileged((String)newValue);
        return;
      case ComposeFilePackage.SERVICE__READ_ONLY:
        setRead_only((String)newValue);
        return;
      case ComposeFilePackage.SERVICE__RESTART:
        setRestart((String)newValue);
        return;
      case ComposeFilePackage.SERVICE__SECRETS:
        setSecrets((ServiceSecrets)newValue);
        return;
      case ComposeFilePackage.SERVICE__SECURITY_OPT:
        setSecurity_opt((List)newValue);
        return;
      case ComposeFilePackage.SERVICE__SHM_SIZE:
        setShm_size((String)newValue);
        return;
      case ComposeFilePackage.SERVICE__STDIN_OPEN:
        setStdin_open((String)newValue);
        return;
      case ComposeFilePackage.SERVICE__STOP_GRACE_PERIOD:
        setStop_grace_period((String)newValue);
        return;
      case ComposeFilePackage.SERVICE__STOP_SIGNAL:
        setStop_signal((String)newValue);
        return;
      case ComposeFilePackage.SERVICE__SYSCTLS:
        setSysctls((EObject)newValue);
        return;
      case ComposeFilePackage.SERVICE__TTY:
        setTty((String)newValue);
        return;
      case ComposeFilePackage.SERVICE__ULIMITS:
        setUlimits((Ulimits)newValue);
        return;
      case ComposeFilePackage.SERVICE__USER:
        setUser((String)newValue);
        return;
      case ComposeFilePackage.SERVICE__USERNS_MODE:
        setUserns_mode((String)newValue);
        return;
      case ComposeFilePackage.SERVICE__VOLUMES:
        setVolumes((ServiceVolumes)newValue);
        return;
      case ComposeFilePackage.SERVICE__WORKING_DIR:
        setWorking_dir((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ComposeFilePackage.SERVICE__NAME:
        setName(NAME_EDEFAULT);
        return;
      case ComposeFilePackage.SERVICE__BUILD:
        setBuild((Build)null);
        return;
      case ComposeFilePackage.SERVICE__CAP_ADD:
        setCap_add((List)null);
        return;
      case ComposeFilePackage.SERVICE__CAP_DROP:
        setCap_drop((List)null);
        return;
      case ComposeFilePackage.SERVICE__CGROUP_PARENT:
        setCgroup_parent(CGROUP_PARENT_EDEFAULT);
        return;
      case ComposeFilePackage.SERVICE__COMMAND:
        setCommand(COMMAND_EDEFAULT);
        return;
      case ComposeFilePackage.SERVICE__CONTAINER_NAME:
        setContainer_name(CONTAINER_NAME_EDEFAULT);
        return;
      case ComposeFilePackage.SERVICE__CREDENTIAL_SPEC:
        setCredential_spec((CredentialSpec)null);
        return;
      case ComposeFilePackage.SERVICE__DEPENDS_ON:
        setDepends_on((List)null);
        return;
      case ComposeFilePackage.SERVICE__DEPLOY:
        setDeploy((Deploy)null);
        return;
      case ComposeFilePackage.SERVICE__DEVICES:
        setDevices((List)null);
        return;
      case ComposeFilePackage.SERVICE__DNS:
        setDns((List)null);
        return;
      case ComposeFilePackage.SERVICE__DOMAINNAME:
        setDomainname(DOMAINNAME_EDEFAULT);
        return;
      case ComposeFilePackage.SERVICE__ENTRYPOINT:
        setEntrypoint((ValueOrList)null);
        return;
      case ComposeFilePackage.SERVICE__ENV_FILE:
        setEnv_file((ValueOrList)null);
        return;
      case ComposeFilePackage.SERVICE__ENVIRONMENT:
        setEnvironment((Mapping)null);
        return;
      case ComposeFilePackage.SERVICE__EXPOSE:
        setExpose((List)null);
        return;
      case ComposeFilePackage.SERVICE__EXTERNAL_LINKS:
        setExternal_links((ListOrMapping)null);
        return;
      case ComposeFilePackage.SERVICE__HEALTHCHECK:
        setHealthcheck((Healthcheck)null);
        return;
      case ComposeFilePackage.SERVICE__HOSTNAME:
        setHostname(HOSTNAME_EDEFAULT);
        return;
      case ComposeFilePackage.SERVICE__IMAGE:
        setImage(IMAGE_EDEFAULT);
        return;
      case ComposeFilePackage.SERVICE__INIT:
        setInit(INIT_EDEFAULT);
        return;
      case ComposeFilePackage.SERVICE__IPC:
        setIpc(IPC_EDEFAULT);
        return;
      case ComposeFilePackage.SERVICE__ISOLATION:
        setIsolation(ISOLATION_EDEFAULT);
        return;
      case ComposeFilePackage.SERVICE__LABELS:
        setLabels((ListOrMapping)null);
        return;
      case ComposeFilePackage.SERVICE__LINKS:
        setLinks((ListOrMapping)null);
        return;
      case ComposeFilePackage.SERVICE__LOGGING:
        setLogging((Logging)null);
        return;
      case ComposeFilePackage.SERVICE__MAC_ADDRESS:
        setMac_address(MAC_ADDRESS_EDEFAULT);
        return;
      case ComposeFilePackage.SERVICE__NETWORK_MODE:
        setNetwork_mode(NETWORK_MODE_EDEFAULT);
        return;
      case ComposeFilePackage.SERVICE__NETWORKS:
        setNetworks((List)null);
        return;
      case ComposeFilePackage.SERVICE__PID:
        setPid(PID_EDEFAULT);
        return;
      case ComposeFilePackage.SERVICE__PORTS:
        setPorts((Ports)null);
        return;
      case ComposeFilePackage.SERVICE__PRIVILEGED:
        setPrivileged(PRIVILEGED_EDEFAULT);
        return;
      case ComposeFilePackage.SERVICE__READ_ONLY:
        setRead_only(READ_ONLY_EDEFAULT);
        return;
      case ComposeFilePackage.SERVICE__RESTART:
        setRestart(RESTART_EDEFAULT);
        return;
      case ComposeFilePackage.SERVICE__SECRETS:
        setSecrets((ServiceSecrets)null);
        return;
      case ComposeFilePackage.SERVICE__SECURITY_OPT:
        setSecurity_opt((List)null);
        return;
      case ComposeFilePackage.SERVICE__SHM_SIZE:
        setShm_size(SHM_SIZE_EDEFAULT);
        return;
      case ComposeFilePackage.SERVICE__STDIN_OPEN:
        setStdin_open(STDIN_OPEN_EDEFAULT);
        return;
      case ComposeFilePackage.SERVICE__STOP_GRACE_PERIOD:
        setStop_grace_period(STOP_GRACE_PERIOD_EDEFAULT);
        return;
      case ComposeFilePackage.SERVICE__STOP_SIGNAL:
        setStop_signal(STOP_SIGNAL_EDEFAULT);
        return;
      case ComposeFilePackage.SERVICE__SYSCTLS:
        setSysctls((EObject)null);
        return;
      case ComposeFilePackage.SERVICE__TTY:
        setTty(TTY_EDEFAULT);
        return;
      case ComposeFilePackage.SERVICE__ULIMITS:
        setUlimits((Ulimits)null);
        return;
      case ComposeFilePackage.SERVICE__USER:
        setUser(USER_EDEFAULT);
        return;
      case ComposeFilePackage.SERVICE__USERNS_MODE:
        setUserns_mode(USERNS_MODE_EDEFAULT);
        return;
      case ComposeFilePackage.SERVICE__VOLUMES:
        setVolumes((ServiceVolumes)null);
        return;
      case ComposeFilePackage.SERVICE__WORKING_DIR:
        setWorking_dir(WORKING_DIR_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ComposeFilePackage.SERVICE__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case ComposeFilePackage.SERVICE__BUILD:
        return build != null;
      case ComposeFilePackage.SERVICE__CAP_ADD:
        return cap_add != null;
      case ComposeFilePackage.SERVICE__CAP_DROP:
        return cap_drop != null;
      case ComposeFilePackage.SERVICE__CGROUP_PARENT:
        return CGROUP_PARENT_EDEFAULT == null ? cgroup_parent != null : !CGROUP_PARENT_EDEFAULT.equals(cgroup_parent);
      case ComposeFilePackage.SERVICE__COMMAND:
        return COMMAND_EDEFAULT == null ? command != null : !COMMAND_EDEFAULT.equals(command);
      case ComposeFilePackage.SERVICE__CONTAINER_NAME:
        return CONTAINER_NAME_EDEFAULT == null ? container_name != null : !CONTAINER_NAME_EDEFAULT.equals(container_name);
      case ComposeFilePackage.SERVICE__CREDENTIAL_SPEC:
        return credential_spec != null;
      case ComposeFilePackage.SERVICE__DEPENDS_ON:
        return depends_on != null;
      case ComposeFilePackage.SERVICE__DEPLOY:
        return deploy != null;
      case ComposeFilePackage.SERVICE__DEVICES:
        return devices != null;
      case ComposeFilePackage.SERVICE__DNS:
        return dns != null;
      case ComposeFilePackage.SERVICE__DOMAINNAME:
        return DOMAINNAME_EDEFAULT == null ? domainname != null : !DOMAINNAME_EDEFAULT.equals(domainname);
      case ComposeFilePackage.SERVICE__ENTRYPOINT:
        return entrypoint != null;
      case ComposeFilePackage.SERVICE__ENV_FILE:
        return env_file != null;
      case ComposeFilePackage.SERVICE__ENVIRONMENT:
        return environment != null;
      case ComposeFilePackage.SERVICE__EXPOSE:
        return expose != null;
      case ComposeFilePackage.SERVICE__EXTERNAL_LINKS:
        return external_links != null;
      case ComposeFilePackage.SERVICE__HEALTHCHECK:
        return healthcheck != null;
      case ComposeFilePackage.SERVICE__HOSTNAME:
        return HOSTNAME_EDEFAULT == null ? hostname != null : !HOSTNAME_EDEFAULT.equals(hostname);
      case ComposeFilePackage.SERVICE__IMAGE:
        return IMAGE_EDEFAULT == null ? image != null : !IMAGE_EDEFAULT.equals(image);
      case ComposeFilePackage.SERVICE__INIT:
        return INIT_EDEFAULT == null ? init != null : !INIT_EDEFAULT.equals(init);
      case ComposeFilePackage.SERVICE__IPC:
        return IPC_EDEFAULT == null ? ipc != null : !IPC_EDEFAULT.equals(ipc);
      case ComposeFilePackage.SERVICE__ISOLATION:
        return ISOLATION_EDEFAULT == null ? isolation != null : !ISOLATION_EDEFAULT.equals(isolation);
      case ComposeFilePackage.SERVICE__LABELS:
        return labels != null;
      case ComposeFilePackage.SERVICE__LINKS:
        return links != null;
      case ComposeFilePackage.SERVICE__LOGGING:
        return logging != null;
      case ComposeFilePackage.SERVICE__MAC_ADDRESS:
        return MAC_ADDRESS_EDEFAULT == null ? mac_address != null : !MAC_ADDRESS_EDEFAULT.equals(mac_address);
      case ComposeFilePackage.SERVICE__NETWORK_MODE:
        return NETWORK_MODE_EDEFAULT == null ? network_mode != null : !NETWORK_MODE_EDEFAULT.equals(network_mode);
      case ComposeFilePackage.SERVICE__NETWORKS:
        return networks != null;
      case ComposeFilePackage.SERVICE__PID:
        return PID_EDEFAULT == null ? pid != null : !PID_EDEFAULT.equals(pid);
      case ComposeFilePackage.SERVICE__PORTS:
        return ports != null;
      case ComposeFilePackage.SERVICE__PRIVILEGED:
        return PRIVILEGED_EDEFAULT == null ? privileged != null : !PRIVILEGED_EDEFAULT.equals(privileged);
      case ComposeFilePackage.SERVICE__READ_ONLY:
        return READ_ONLY_EDEFAULT == null ? read_only != null : !READ_ONLY_EDEFAULT.equals(read_only);
      case ComposeFilePackage.SERVICE__RESTART:
        return RESTART_EDEFAULT == null ? restart != null : !RESTART_EDEFAULT.equals(restart);
      case ComposeFilePackage.SERVICE__SECRETS:
        return secrets != null;
      case ComposeFilePackage.SERVICE__SECURITY_OPT:
        return security_opt != null;
      case ComposeFilePackage.SERVICE__SHM_SIZE:
        return SHM_SIZE_EDEFAULT == null ? shm_size != null : !SHM_SIZE_EDEFAULT.equals(shm_size);
      case ComposeFilePackage.SERVICE__STDIN_OPEN:
        return STDIN_OPEN_EDEFAULT == null ? stdin_open != null : !STDIN_OPEN_EDEFAULT.equals(stdin_open);
      case ComposeFilePackage.SERVICE__STOP_GRACE_PERIOD:
        return STOP_GRACE_PERIOD_EDEFAULT == null ? stop_grace_period != null : !STOP_GRACE_PERIOD_EDEFAULT.equals(stop_grace_period);
      case ComposeFilePackage.SERVICE__STOP_SIGNAL:
        return STOP_SIGNAL_EDEFAULT == null ? stop_signal != null : !STOP_SIGNAL_EDEFAULT.equals(stop_signal);
      case ComposeFilePackage.SERVICE__SYSCTLS:
        return sysctls != null;
      case ComposeFilePackage.SERVICE__TTY:
        return TTY_EDEFAULT == null ? tty != null : !TTY_EDEFAULT.equals(tty);
      case ComposeFilePackage.SERVICE__ULIMITS:
        return ulimits != null;
      case ComposeFilePackage.SERVICE__USER:
        return USER_EDEFAULT == null ? user != null : !USER_EDEFAULT.equals(user);
      case ComposeFilePackage.SERVICE__USERNS_MODE:
        return USERNS_MODE_EDEFAULT == null ? userns_mode != null : !USERNS_MODE_EDEFAULT.equals(userns_mode);
      case ComposeFilePackage.SERVICE__VOLUMES:
        return volumes != null;
      case ComposeFilePackage.SERVICE__WORKING_DIR:
        return WORKING_DIR_EDEFAULT == null ? working_dir != null : !WORKING_DIR_EDEFAULT.equals(working_dir);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", cgroup_parent: ");
    result.append(cgroup_parent);
    result.append(", command: ");
    result.append(command);
    result.append(", container_name: ");
    result.append(container_name);
    result.append(", domainname: ");
    result.append(domainname);
    result.append(", hostname: ");
    result.append(hostname);
    result.append(", image: ");
    result.append(image);
    result.append(", init: ");
    result.append(init);
    result.append(", ipc: ");
    result.append(ipc);
    result.append(", isolation: ");
    result.append(isolation);
    result.append(", mac_address: ");
    result.append(mac_address);
    result.append(", network_mode: ");
    result.append(network_mode);
    result.append(", pid: ");
    result.append(pid);
    result.append(", privileged: ");
    result.append(privileged);
    result.append(", read_only: ");
    result.append(read_only);
    result.append(", restart: ");
    result.append(restart);
    result.append(", shm_size: ");
    result.append(shm_size);
    result.append(", stdin_open: ");
    result.append(stdin_open);
    result.append(", stop_grace_period: ");
    result.append(stop_grace_period);
    result.append(", stop_signal: ");
    result.append(stop_signal);
    result.append(", tty: ");
    result.append(tty);
    result.append(", user: ");
    result.append(user);
    result.append(", userns_mode: ");
    result.append(userns_mode);
    result.append(", working_dir: ");
    result.append(working_dir);
    result.append(')');
    return result.toString();
  }

} //ServiceImpl
