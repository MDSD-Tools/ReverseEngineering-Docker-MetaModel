/**
 * generated by Xtext 2.21.0
 */
package org.palladiosimulator.somox.docker.compose.composeFile.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.palladiosimulator.somox.docker.compose.composeFile.ComposeFilePackage;
import org.palladiosimulator.somox.docker.compose.composeFile.Config;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Config</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.ConfigImpl#getParallelism <em>Parallelism</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.ConfigImpl#getDelay <em>Delay</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.ConfigImpl#getFailure_action <em>Failure action</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.ConfigImpl#getMonitor <em>Monitor</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.ConfigImpl#getMax_failure_ratio <em>Max failure ratio</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.ConfigImpl#getOrder <em>Order</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ConfigImpl extends DeployConfigsImpl implements Config
{
  /**
   * The default value of the '{@link #getParallelism() <em>Parallelism</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParallelism()
   * @generated
   * @ordered
   */
  protected static final String PARALLELISM_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getParallelism() <em>Parallelism</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParallelism()
   * @generated
   * @ordered
   */
  protected String parallelism = PARALLELISM_EDEFAULT;

  /**
   * The default value of the '{@link #getDelay() <em>Delay</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDelay()
   * @generated
   * @ordered
   */
  protected static final String DELAY_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDelay() <em>Delay</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDelay()
   * @generated
   * @ordered
   */
  protected String delay = DELAY_EDEFAULT;

  /**
   * The default value of the '{@link #getFailure_action() <em>Failure action</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFailure_action()
   * @generated
   * @ordered
   */
  protected static final String FAILURE_ACTION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getFailure_action() <em>Failure action</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFailure_action()
   * @generated
   * @ordered
   */
  protected String failure_action = FAILURE_ACTION_EDEFAULT;

  /**
   * The default value of the '{@link #getMonitor() <em>Monitor</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMonitor()
   * @generated
   * @ordered
   */
  protected static final String MONITOR_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getMonitor() <em>Monitor</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMonitor()
   * @generated
   * @ordered
   */
  protected String monitor = MONITOR_EDEFAULT;

  /**
   * The default value of the '{@link #getMax_failure_ratio() <em>Max failure ratio</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMax_failure_ratio()
   * @generated
   * @ordered
   */
  protected static final String MAX_FAILURE_RATIO_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getMax_failure_ratio() <em>Max failure ratio</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMax_failure_ratio()
   * @generated
   * @ordered
   */
  protected String max_failure_ratio = MAX_FAILURE_RATIO_EDEFAULT;

  /**
   * The default value of the '{@link #getOrder() <em>Order</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOrder()
   * @generated
   * @ordered
   */
  protected static final String ORDER_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getOrder() <em>Order</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOrder()
   * @generated
   * @ordered
   */
  protected String order = ORDER_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ConfigImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ComposeFilePackage.Literals.CONFIG;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getParallelism()
  {
    return parallelism;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setParallelism(String newParallelism)
  {
    String oldParallelism = parallelism;
    parallelism = newParallelism;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.CONFIG__PARALLELISM, oldParallelism, parallelism));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getDelay()
  {
    return delay;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDelay(String newDelay)
  {
    String oldDelay = delay;
    delay = newDelay;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.CONFIG__DELAY, oldDelay, delay));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getFailure_action()
  {
    return failure_action;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFailure_action(String newFailure_action)
  {
    String oldFailure_action = failure_action;
    failure_action = newFailure_action;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.CONFIG__FAILURE_ACTION, oldFailure_action, failure_action));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getMonitor()
  {
    return monitor;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMonitor(String newMonitor)
  {
    String oldMonitor = monitor;
    monitor = newMonitor;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.CONFIG__MONITOR, oldMonitor, monitor));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getMax_failure_ratio()
  {
    return max_failure_ratio;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMax_failure_ratio(String newMax_failure_ratio)
  {
    String oldMax_failure_ratio = max_failure_ratio;
    max_failure_ratio = newMax_failure_ratio;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.CONFIG__MAX_FAILURE_RATIO, oldMax_failure_ratio, max_failure_ratio));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getOrder()
  {
    return order;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOrder(String newOrder)
  {
    String oldOrder = order;
    order = newOrder;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.CONFIG__ORDER, oldOrder, order));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ComposeFilePackage.CONFIG__PARALLELISM:
        return getParallelism();
      case ComposeFilePackage.CONFIG__DELAY:
        return getDelay();
      case ComposeFilePackage.CONFIG__FAILURE_ACTION:
        return getFailure_action();
      case ComposeFilePackage.CONFIG__MONITOR:
        return getMonitor();
      case ComposeFilePackage.CONFIG__MAX_FAILURE_RATIO:
        return getMax_failure_ratio();
      case ComposeFilePackage.CONFIG__ORDER:
        return getOrder();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ComposeFilePackage.CONFIG__PARALLELISM:
        setParallelism((String)newValue);
        return;
      case ComposeFilePackage.CONFIG__DELAY:
        setDelay((String)newValue);
        return;
      case ComposeFilePackage.CONFIG__FAILURE_ACTION:
        setFailure_action((String)newValue);
        return;
      case ComposeFilePackage.CONFIG__MONITOR:
        setMonitor((String)newValue);
        return;
      case ComposeFilePackage.CONFIG__MAX_FAILURE_RATIO:
        setMax_failure_ratio((String)newValue);
        return;
      case ComposeFilePackage.CONFIG__ORDER:
        setOrder((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ComposeFilePackage.CONFIG__PARALLELISM:
        setParallelism(PARALLELISM_EDEFAULT);
        return;
      case ComposeFilePackage.CONFIG__DELAY:
        setDelay(DELAY_EDEFAULT);
        return;
      case ComposeFilePackage.CONFIG__FAILURE_ACTION:
        setFailure_action(FAILURE_ACTION_EDEFAULT);
        return;
      case ComposeFilePackage.CONFIG__MONITOR:
        setMonitor(MONITOR_EDEFAULT);
        return;
      case ComposeFilePackage.CONFIG__MAX_FAILURE_RATIO:
        setMax_failure_ratio(MAX_FAILURE_RATIO_EDEFAULT);
        return;
      case ComposeFilePackage.CONFIG__ORDER:
        setOrder(ORDER_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ComposeFilePackage.CONFIG__PARALLELISM:
        return PARALLELISM_EDEFAULT == null ? parallelism != null : !PARALLELISM_EDEFAULT.equals(parallelism);
      case ComposeFilePackage.CONFIG__DELAY:
        return DELAY_EDEFAULT == null ? delay != null : !DELAY_EDEFAULT.equals(delay);
      case ComposeFilePackage.CONFIG__FAILURE_ACTION:
        return FAILURE_ACTION_EDEFAULT == null ? failure_action != null : !FAILURE_ACTION_EDEFAULT.equals(failure_action);
      case ComposeFilePackage.CONFIG__MONITOR:
        return MONITOR_EDEFAULT == null ? monitor != null : !MONITOR_EDEFAULT.equals(monitor);
      case ComposeFilePackage.CONFIG__MAX_FAILURE_RATIO:
        return MAX_FAILURE_RATIO_EDEFAULT == null ? max_failure_ratio != null : !MAX_FAILURE_RATIO_EDEFAULT.equals(max_failure_ratio);
      case ComposeFilePackage.CONFIG__ORDER:
        return ORDER_EDEFAULT == null ? order != null : !ORDER_EDEFAULT.equals(order);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (parallelism: ");
    result.append(parallelism);
    result.append(", delay: ");
    result.append(delay);
    result.append(", failure_action: ");
    result.append(failure_action);
    result.append(", monitor: ");
    result.append(monitor);
    result.append(", max_failure_ratio: ");
    result.append(max_failure_ratio);
    result.append(", order: ");
    result.append(order);
    result.append(')');
    return result.toString();
  }

} //ConfigImpl
