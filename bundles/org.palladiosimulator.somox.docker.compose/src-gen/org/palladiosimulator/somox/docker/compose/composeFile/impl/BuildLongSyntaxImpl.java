/**
 * generated by Xtext 2.21.0
 */
package org.palladiosimulator.somox.docker.compose.composeFile.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.palladiosimulator.somox.docker.compose.composeFile.BuildLongSyntax;
import org.palladiosimulator.somox.docker.compose.composeFile.ComposeFilePackage;
import org.palladiosimulator.somox.docker.compose.composeFile.ListOrMapping;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Build Long Syntax</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.BuildLongSyntaxImpl#getContext <em>Context</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.BuildLongSyntaxImpl#getDockerfile <em>Dockerfile</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.BuildLongSyntaxImpl#getArgs <em>Args</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.BuildLongSyntaxImpl#getLabels <em>Labels</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.BuildLongSyntaxImpl#getCache_from <em>Cache from</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.BuildLongSyntaxImpl#getNetwork <em>Network</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.BuildLongSyntaxImpl#getTarget <em>Target</em>}</li>
 *   <li>{@link org.palladiosimulator.somox.docker.compose.composeFile.impl.BuildLongSyntaxImpl#getShm_size <em>Shm size</em>}</li>
 * </ul>
 *
 * @generated
 */
public class BuildLongSyntaxImpl extends BuildImpl implements BuildLongSyntax
{
  /**
   * The default value of the '{@link #getContext() <em>Context</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getContext()
   * @generated
   * @ordered
   */
  protected static final String CONTEXT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getContext() <em>Context</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getContext()
   * @generated
   * @ordered
   */
  protected String context = CONTEXT_EDEFAULT;

  /**
   * The default value of the '{@link #getDockerfile() <em>Dockerfile</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDockerfile()
   * @generated
   * @ordered
   */
  protected static final String DOCKERFILE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDockerfile() <em>Dockerfile</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDockerfile()
   * @generated
   * @ordered
   */
  protected String dockerfile = DOCKERFILE_EDEFAULT;

  /**
   * The cached value of the '{@link #getArgs() <em>Args</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getArgs()
   * @generated
   * @ordered
   */
  protected ListOrMapping args;

  /**
   * The cached value of the '{@link #getLabels() <em>Labels</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLabels()
   * @generated
   * @ordered
   */
  protected ListOrMapping labels;

  /**
   * The cached value of the '{@link #getCache_from() <em>Cache from</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCache_from()
   * @generated
   * @ordered
   */
  protected ListOrMapping cache_from;

  /**
   * The default value of the '{@link #getNetwork() <em>Network</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNetwork()
   * @generated
   * @ordered
   */
  protected static final String NETWORK_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getNetwork() <em>Network</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNetwork()
   * @generated
   * @ordered
   */
  protected String network = NETWORK_EDEFAULT;

  /**
   * The default value of the '{@link #getTarget() <em>Target</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTarget()
   * @generated
   * @ordered
   */
  protected static final String TARGET_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getTarget() <em>Target</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTarget()
   * @generated
   * @ordered
   */
  protected String target = TARGET_EDEFAULT;

  /**
   * The default value of the '{@link #getShm_size() <em>Shm size</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getShm_size()
   * @generated
   * @ordered
   */
  protected static final String SHM_SIZE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getShm_size() <em>Shm size</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getShm_size()
   * @generated
   * @ordered
   */
  protected String shm_size = SHM_SIZE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected BuildLongSyntaxImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ComposeFilePackage.Literals.BUILD_LONG_SYNTAX;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getContext()
  {
    return context;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setContext(String newContext)
  {
    String oldContext = context;
    context = newContext;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.BUILD_LONG_SYNTAX__CONTEXT, oldContext, context));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getDockerfile()
  {
    return dockerfile;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDockerfile(String newDockerfile)
  {
    String oldDockerfile = dockerfile;
    dockerfile = newDockerfile;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.BUILD_LONG_SYNTAX__DOCKERFILE, oldDockerfile, dockerfile));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ListOrMapping getArgs()
  {
    return args;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetArgs(ListOrMapping newArgs, NotificationChain msgs)
  {
    ListOrMapping oldArgs = args;
    args = newArgs;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ComposeFilePackage.BUILD_LONG_SYNTAX__ARGS, oldArgs, newArgs);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setArgs(ListOrMapping newArgs)
  {
    if (newArgs != args)
    {
      NotificationChain msgs = null;
      if (args != null)
        msgs = ((InternalEObject)args).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ComposeFilePackage.BUILD_LONG_SYNTAX__ARGS, null, msgs);
      if (newArgs != null)
        msgs = ((InternalEObject)newArgs).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ComposeFilePackage.BUILD_LONG_SYNTAX__ARGS, null, msgs);
      msgs = basicSetArgs(newArgs, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.BUILD_LONG_SYNTAX__ARGS, newArgs, newArgs));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ListOrMapping getLabels()
  {
    return labels;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetLabels(ListOrMapping newLabels, NotificationChain msgs)
  {
    ListOrMapping oldLabels = labels;
    labels = newLabels;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ComposeFilePackage.BUILD_LONG_SYNTAX__LABELS, oldLabels, newLabels);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLabels(ListOrMapping newLabels)
  {
    if (newLabels != labels)
    {
      NotificationChain msgs = null;
      if (labels != null)
        msgs = ((InternalEObject)labels).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ComposeFilePackage.BUILD_LONG_SYNTAX__LABELS, null, msgs);
      if (newLabels != null)
        msgs = ((InternalEObject)newLabels).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ComposeFilePackage.BUILD_LONG_SYNTAX__LABELS, null, msgs);
      msgs = basicSetLabels(newLabels, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.BUILD_LONG_SYNTAX__LABELS, newLabels, newLabels));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ListOrMapping getCache_from()
  {
    return cache_from;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCache_from(ListOrMapping newCache_from, NotificationChain msgs)
  {
    ListOrMapping oldCache_from = cache_from;
    cache_from = newCache_from;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ComposeFilePackage.BUILD_LONG_SYNTAX__CACHE_FROM, oldCache_from, newCache_from);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCache_from(ListOrMapping newCache_from)
  {
    if (newCache_from != cache_from)
    {
      NotificationChain msgs = null;
      if (cache_from != null)
        msgs = ((InternalEObject)cache_from).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ComposeFilePackage.BUILD_LONG_SYNTAX__CACHE_FROM, null, msgs);
      if (newCache_from != null)
        msgs = ((InternalEObject)newCache_from).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ComposeFilePackage.BUILD_LONG_SYNTAX__CACHE_FROM, null, msgs);
      msgs = basicSetCache_from(newCache_from, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.BUILD_LONG_SYNTAX__CACHE_FROM, newCache_from, newCache_from));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getNetwork()
  {
    return network;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNetwork(String newNetwork)
  {
    String oldNetwork = network;
    network = newNetwork;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.BUILD_LONG_SYNTAX__NETWORK, oldNetwork, network));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getTarget()
  {
    return target;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTarget(String newTarget)
  {
    String oldTarget = target;
    target = newTarget;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.BUILD_LONG_SYNTAX__TARGET, oldTarget, target));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getShm_size()
  {
    return shm_size;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setShm_size(String newShm_size)
  {
    String oldShm_size = shm_size;
    shm_size = newShm_size;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComposeFilePackage.BUILD_LONG_SYNTAX__SHM_SIZE, oldShm_size, shm_size));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case ComposeFilePackage.BUILD_LONG_SYNTAX__ARGS:
        return basicSetArgs(null, msgs);
      case ComposeFilePackage.BUILD_LONG_SYNTAX__LABELS:
        return basicSetLabels(null, msgs);
      case ComposeFilePackage.BUILD_LONG_SYNTAX__CACHE_FROM:
        return basicSetCache_from(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ComposeFilePackage.BUILD_LONG_SYNTAX__CONTEXT:
        return getContext();
      case ComposeFilePackage.BUILD_LONG_SYNTAX__DOCKERFILE:
        return getDockerfile();
      case ComposeFilePackage.BUILD_LONG_SYNTAX__ARGS:
        return getArgs();
      case ComposeFilePackage.BUILD_LONG_SYNTAX__LABELS:
        return getLabels();
      case ComposeFilePackage.BUILD_LONG_SYNTAX__CACHE_FROM:
        return getCache_from();
      case ComposeFilePackage.BUILD_LONG_SYNTAX__NETWORK:
        return getNetwork();
      case ComposeFilePackage.BUILD_LONG_SYNTAX__TARGET:
        return getTarget();
      case ComposeFilePackage.BUILD_LONG_SYNTAX__SHM_SIZE:
        return getShm_size();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ComposeFilePackage.BUILD_LONG_SYNTAX__CONTEXT:
        setContext((String)newValue);
        return;
      case ComposeFilePackage.BUILD_LONG_SYNTAX__DOCKERFILE:
        setDockerfile((String)newValue);
        return;
      case ComposeFilePackage.BUILD_LONG_SYNTAX__ARGS:
        setArgs((ListOrMapping)newValue);
        return;
      case ComposeFilePackage.BUILD_LONG_SYNTAX__LABELS:
        setLabels((ListOrMapping)newValue);
        return;
      case ComposeFilePackage.BUILD_LONG_SYNTAX__CACHE_FROM:
        setCache_from((ListOrMapping)newValue);
        return;
      case ComposeFilePackage.BUILD_LONG_SYNTAX__NETWORK:
        setNetwork((String)newValue);
        return;
      case ComposeFilePackage.BUILD_LONG_SYNTAX__TARGET:
        setTarget((String)newValue);
        return;
      case ComposeFilePackage.BUILD_LONG_SYNTAX__SHM_SIZE:
        setShm_size((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ComposeFilePackage.BUILD_LONG_SYNTAX__CONTEXT:
        setContext(CONTEXT_EDEFAULT);
        return;
      case ComposeFilePackage.BUILD_LONG_SYNTAX__DOCKERFILE:
        setDockerfile(DOCKERFILE_EDEFAULT);
        return;
      case ComposeFilePackage.BUILD_LONG_SYNTAX__ARGS:
        setArgs((ListOrMapping)null);
        return;
      case ComposeFilePackage.BUILD_LONG_SYNTAX__LABELS:
        setLabels((ListOrMapping)null);
        return;
      case ComposeFilePackage.BUILD_LONG_SYNTAX__CACHE_FROM:
        setCache_from((ListOrMapping)null);
        return;
      case ComposeFilePackage.BUILD_LONG_SYNTAX__NETWORK:
        setNetwork(NETWORK_EDEFAULT);
        return;
      case ComposeFilePackage.BUILD_LONG_SYNTAX__TARGET:
        setTarget(TARGET_EDEFAULT);
        return;
      case ComposeFilePackage.BUILD_LONG_SYNTAX__SHM_SIZE:
        setShm_size(SHM_SIZE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ComposeFilePackage.BUILD_LONG_SYNTAX__CONTEXT:
        return CONTEXT_EDEFAULT == null ? context != null : !CONTEXT_EDEFAULT.equals(context);
      case ComposeFilePackage.BUILD_LONG_SYNTAX__DOCKERFILE:
        return DOCKERFILE_EDEFAULT == null ? dockerfile != null : !DOCKERFILE_EDEFAULT.equals(dockerfile);
      case ComposeFilePackage.BUILD_LONG_SYNTAX__ARGS:
        return args != null;
      case ComposeFilePackage.BUILD_LONG_SYNTAX__LABELS:
        return labels != null;
      case ComposeFilePackage.BUILD_LONG_SYNTAX__CACHE_FROM:
        return cache_from != null;
      case ComposeFilePackage.BUILD_LONG_SYNTAX__NETWORK:
        return NETWORK_EDEFAULT == null ? network != null : !NETWORK_EDEFAULT.equals(network);
      case ComposeFilePackage.BUILD_LONG_SYNTAX__TARGET:
        return TARGET_EDEFAULT == null ? target != null : !TARGET_EDEFAULT.equals(target);
      case ComposeFilePackage.BUILD_LONG_SYNTAX__SHM_SIZE:
        return SHM_SIZE_EDEFAULT == null ? shm_size != null : !SHM_SIZE_EDEFAULT.equals(shm_size);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (context: ");
    result.append(context);
    result.append(", dockerfile: ");
    result.append(dockerfile);
    result.append(", network: ");
    result.append(network);
    result.append(", target: ");
    result.append(target);
    result.append(", shm_size: ");
    result.append(shm_size);
    result.append(')');
    return result.toString();
  }

} //BuildLongSyntaxImpl
